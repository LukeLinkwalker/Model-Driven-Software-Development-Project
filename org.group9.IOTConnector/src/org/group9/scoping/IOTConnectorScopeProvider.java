/*
 * generated by Xtext 2.21.0
 */
package org.group9.scoping;

import java.util.List;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EReference;
import org.eclipse.xtext.EcoreUtil2;
import org.eclipse.xtext.scoping.IScope;
import org.eclipse.xtext.scoping.Scopes;
import org.group9.iOTConnector.Config;
import org.group9.iOTConnector.IOTConnectorPackage;
import org.group9.iOTConnector.ReadingName;
import org.group9.iOTConnector.ReadingNameWithConfigScope;

/**
 * This class contains custom scoping description.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#scoping
 * on how and when to use it.
 */
public class IOTConnectorScopeProvider extends AbstractIOTConnectorScopeProvider {
    @Override
    public IScope getScope(EObject context, EReference reference) {
        if (context instanceof ReadingNameWithConfigScope
                && reference == IOTConnectorPackage.Literals.READING_NAME_WITH_CONFIG_SCOPE__NAME) {
            EObject containerOfConfig = EcoreUtil2.getContainerOfType(context, Config.class);
            List<ReadingName> candidates = EcoreUtil2.getAllContentsOfType(containerOfConfig, ReadingName.class);

               return Scopes.scopeFor(candidates);
        }
        return super.getScope(context, reference);
    }
}
