/*
 * generated by Xtext 2.21.0
 */
grammar InternalIOTConnector;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.group9.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.group9.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.group9.services.IOTConnectorGrammarAccess;

}

@parser::members {

 	private IOTConnectorGrammarAccess grammarAccess;

    public InternalIOTConnectorParser(TokenStream input, IOTConnectorGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Program";
   	}

   	@Override
   	protected IOTConnectorGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleProgram
entryRuleProgram returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProgramRule()); }
	iv_ruleProgram=ruleProgram
	{ $current=$iv_ruleProgram.current; }
	EOF;

// Rule Program
ruleProgram returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getProgramAccess().getWebserverWebserverParserRuleCall_0_0());
				}
				lv_webserver_0_0=ruleWebserver
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProgramRule());
					}
					set(
						$current,
						"webserver",
						lv_webserver_0_0,
						"org.group9.IOTConnector.Webserver");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getProgramAccess().getWifisWifiParserRuleCall_1_0());
				}
				lv_wifis_1_0=ruleWifi
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProgramRule());
					}
					add(
						$current,
						"wifis",
						lv_wifis_1_0,
						"org.group9.IOTConnector.Wifi");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getProgramAccess().getConfigsConfigParserRuleCall_2_0());
				}
				lv_configs_2_0=ruleConfig
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProgramRule());
					}
					add(
						$current,
						"configs",
						lv_configs_2_0,
						"org.group9.IOTConnector.Config");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getProgramAccess().getBoardsBoardParserRuleCall_3_0());
				}
				lv_boards_3_0=ruleBoard
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProgramRule());
					}
					add(
						$current,
						"boards",
						lv_boards_3_0,
						"org.group9.IOTConnector.Board");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleWebserver
entryRuleWebserver returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWebserverRule()); }
	iv_ruleWebserver=ruleWebserver
	{ $current=$iv_ruleWebserver.current; }
	EOF;

// Rule Webserver
ruleWebserver returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='define'
		{
			newLeafNode(otherlv_0, grammarAccess.getWebserverAccess().getDefineKeyword_0());
		}
		otherlv_1='webserver'
		{
			newLeafNode(otherlv_1, grammarAccess.getWebserverAccess().getWebserverKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getWebserverAccess().getLeftParenthesisKeyword_2());
		}
		otherlv_3='host'
		{
			newLeafNode(otherlv_3, grammarAccess.getWebserverAccess().getHostKeyword_3());
		}
		otherlv_4='is'
		{
			newLeafNode(otherlv_4, grammarAccess.getWebserverAccess().getIsKeyword_4());
		}
		(
			(
				lv_url_5_0=RULE_STRING
				{
					newLeafNode(lv_url_5_0, grammarAccess.getWebserverAccess().getUrlSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWebserverRule());
					}
					setWithLastConsumed(
						$current,
						"url",
						lv_url_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getWebserverAccess().getCommaKeyword_6());
		}
		otherlv_7='port'
		{
			newLeafNode(otherlv_7, grammarAccess.getWebserverAccess().getPortKeyword_7());
		}
		otherlv_8='is'
		{
			newLeafNode(otherlv_8, grammarAccess.getWebserverAccess().getIsKeyword_8());
		}
		(
			(
				lv_port_9_0=RULE_INT
				{
					newLeafNode(lv_port_9_0, grammarAccess.getWebserverAccess().getPortINTTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWebserverRule());
					}
					setWithLastConsumed(
						$current,
						"port",
						lv_port_9_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_10=')'
		{
			newLeafNode(otherlv_10, grammarAccess.getWebserverAccess().getRightParenthesisKeyword_10());
		}
	)
;

// Entry rule entryRuleWifi
entryRuleWifi returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWifiRule()); }
	iv_ruleWifi=ruleWifi
	{ $current=$iv_ruleWifi.current; }
	EOF;

// Rule Wifi
ruleWifi returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='define'
		{
			newLeafNode(otherlv_0, grammarAccess.getWifiAccess().getDefineKeyword_0());
		}
		otherlv_1='wifi'
		{
			newLeafNode(otherlv_1, grammarAccess.getWifiAccess().getWifiKeyword_1());
		}
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getWifiAccess().getLeftParenthesisKeyword_2());
		}
		otherlv_3='ssid'
		{
			newLeafNode(otherlv_3, grammarAccess.getWifiAccess().getSsidKeyword_3());
		}
		otherlv_4='is'
		{
			newLeafNode(otherlv_4, grammarAccess.getWifiAccess().getIsKeyword_4());
		}
		(
			(
				lv_ssid_5_0=RULE_STRING
				{
					newLeafNode(lv_ssid_5_0, grammarAccess.getWifiAccess().getSsidSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWifiRule());
					}
					setWithLastConsumed(
						$current,
						"ssid",
						lv_ssid_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_6=','
		{
			newLeafNode(otherlv_6, grammarAccess.getWifiAccess().getCommaKeyword_6());
		}
		otherlv_7='password'
		{
			newLeafNode(otherlv_7, grammarAccess.getWifiAccess().getPasswordKeyword_7());
		}
		otherlv_8='is'
		{
			newLeafNode(otherlv_8, grammarAccess.getWifiAccess().getIsKeyword_8());
		}
		(
			(
				lv_password_9_0=RULE_STRING
				{
					newLeafNode(lv_password_9_0, grammarAccess.getWifiAccess().getPasswordSTRINGTerminalRuleCall_9_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWifiRule());
					}
					setWithLastConsumed(
						$current,
						"password",
						lv_password_9_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_10=')'
		{
			newLeafNode(otherlv_10, grammarAccess.getWifiAccess().getRightParenthesisKeyword_10());
		}
	)
;

// Entry rule entryRuleConfig
entryRuleConfig returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConfigRule()); }
	iv_ruleConfig=ruleConfig
	{ $current=$iv_ruleConfig.current; }
	EOF;

// Rule Config
ruleConfig returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='config'
		{
			newLeafNode(otherlv_0, grammarAccess.getConfigAccess().getConfigKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getConfigAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConfigRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getConfigAccess().getSensorsSensorParserRuleCall_2_0());
				}
				lv_sensors_2_0=ruleSensor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConfigRule());
					}
					add(
						$current,
						"sensors",
						lv_sensors_2_0,
						"org.group9.IOTConnector.Sensor");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleBoard
entryRuleBoard returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBoardRule()); }
	iv_ruleBoard=ruleBoard
	{ $current=$iv_ruleBoard.current; }
	EOF;

// Rule Board
ruleBoard returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='board'
		{
			newLeafNode(otherlv_0, grammarAccess.getBoardAccess().getBoardKeyword_0());
		}
		(
			otherlv_1='('
			{
				newLeafNode(otherlv_1, grammarAccess.getBoardAccess().getLeftParenthesisKeyword_1_0());
			}
			otherlv_2='id'
			{
				newLeafNode(otherlv_2, grammarAccess.getBoardAccess().getIdKeyword_1_1());
			}
			otherlv_3='is'
			{
				newLeafNode(otherlv_3, grammarAccess.getBoardAccess().getIsKeyword_1_2());
			}
			(
				(
					lv_name_4_0=RULE_STRING
					{
						newLeafNode(lv_name_4_0, grammarAccess.getBoardAccess().getNameSTRINGTerminalRuleCall_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBoardRule());
						}
						setWithLastConsumed(
							$current,
							"name",
							lv_name_4_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_5=')'
			{
				newLeafNode(otherlv_5, grammarAccess.getBoardAccess().getRightParenthesisKeyword_1_4());
			}
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getBoardAccess().getSensorConfigsSensorConfigParserRuleCall_2_0());
				}
				lv_sensorConfigs_6_0=ruleSensorConfig
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBoardRule());
					}
					add(
						$current,
						"sensorConfigs",
						lv_sensorConfigs_6_0,
						"org.group9.IOTConnector.SensorConfig");
					afterParserOrEnumRuleCall();
				}
			)
		)*
		otherlv_7='use'
		{
			newLeafNode(otherlv_7, grammarAccess.getBoardAccess().getUseKeyword_3());
		}
		otherlv_8='config'
		{
			newLeafNode(otherlv_8, grammarAccess.getBoardAccess().getConfigKeyword_4());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBoardRule());
					}
				}
				otherlv_9=RULE_ID
				{
					newLeafNode(otherlv_9, grammarAccess.getBoardAccess().getConfigNameConfigCrossReference_5_0());
				}
			)
		)
	)
;

// Entry rule entryRuleSensorConfig
entryRuleSensorConfig returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorConfigRule()); }
	iv_ruleSensorConfig=ruleSensorConfig
	{ $current=$iv_ruleSensorConfig.current; }
	EOF;

// Rule SensorConfig
ruleSensorConfig returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='sensor'
		{
			newLeafNode(otherlv_0, grammarAccess.getSensorConfigAccess().getSensorKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorConfigAccess().getNameSensorNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleSensorName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorConfigRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.group9.IOTConnector.SensorName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2='external'
			{
				newLeafNode(otherlv_2, grammarAccess.getSensorConfigAccess().getExternalKeyword_2_0());
			}
			otherlv_3='('
			{
				newLeafNode(otherlv_3, grammarAccess.getSensorConfigAccess().getLeftParenthesisKeyword_2_1());
			}
			otherlv_4='pin'
			{
				newLeafNode(otherlv_4, grammarAccess.getSensorConfigAccess().getPinKeyword_2_2());
			}
			otherlv_5='in'
			{
				newLeafNode(otherlv_5, grammarAccess.getSensorConfigAccess().getInKeyword_2_3());
			}
			otherlv_6='is'
			{
				newLeafNode(otherlv_6, grammarAccess.getSensorConfigAccess().getIsKeyword_2_4());
			}
			(
				(
					lv_pinIn_7_0=RULE_STRING
					{
						newLeafNode(lv_pinIn_7_0, grammarAccess.getSensorConfigAccess().getPinInSTRINGTerminalRuleCall_2_5_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSensorConfigRule());
						}
						setWithLastConsumed(
							$current,
							"pinIn",
							lv_pinIn_7_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_8=','
			{
				newLeafNode(otherlv_8, grammarAccess.getSensorConfigAccess().getCommaKeyword_2_6());
			}
			otherlv_9='pin'
			{
				newLeafNode(otherlv_9, grammarAccess.getSensorConfigAccess().getPinKeyword_2_7());
			}
			otherlv_10='out'
			{
				newLeafNode(otherlv_10, grammarAccess.getSensorConfigAccess().getOutKeyword_2_8());
			}
			otherlv_11='is'
			{
				newLeafNode(otherlv_11, grammarAccess.getSensorConfigAccess().getIsKeyword_2_9());
			}
			(
				(
					lv_pinOut_12_0=RULE_STRING
					{
						newLeafNode(lv_pinOut_12_0, grammarAccess.getSensorConfigAccess().getPinOutSTRINGTerminalRuleCall_2_10_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSensorConfigRule());
						}
						setWithLastConsumed(
							$current,
							"pinOut",
							lv_pinOut_12_0,
							"org.eclipse.xtext.common.Terminals.STRING");
					}
				)
			)
			otherlv_13=')'
			{
				newLeafNode(otherlv_13, grammarAccess.getSensorConfigAccess().getRightParenthesisKeyword_2_11());
			}
		)?
	)
;

// Entry rule entryRuleSensor
entryRuleSensor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSensorRule()); }
	iv_ruleSensor=ruleSensor
	{ $current=$iv_ruleSensor.current; }
	EOF;

// Rule Sensor
ruleSensor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='sensor'
		{
			newLeafNode(otherlv_0, grammarAccess.getSensorAccess().getSensorKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorAccess().getNameSensorNameParserRuleCall_1_0());
				}
				lv_name_1_0=ruleSensorName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorRule());
					}
					set(
						$current,
						"name",
						lv_name_1_0,
						"org.group9.IOTConnector.SensorName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_type_2_0='external'
				{
					newLeafNode(lv_type_2_0, grammarAccess.getSensorAccess().getTypeExternalKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSensorRule());
					}
					setWithLastConsumed($current, "type", lv_type_2_0, "external");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorAccess().getOutputOutputParserRuleCall_3_0());
				}
				lv_output_3_0=ruleOutput
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorRule());
					}
					set(
						$current,
						"output",
						lv_output_3_0,
						"org.group9.IOTConnector.Output");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorAccess().getFunctionsFunctionParserRuleCall_4_0());
				}
				lv_functions_4_0=ruleFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorRule());
					}
					add(
						$current,
						"functions",
						lv_functions_4_0,
						"org.group9.IOTConnector.Function");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		(
			(
				{
					newCompositeNode(grammarAccess.getSensorAccess().getSendSendParserRuleCall_5_0());
				}
				lv_send_5_0=ruleSend
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSensorRule());
					}
					set(
						$current,
						"send",
						lv_send_5_0,
						"org.group9.IOTConnector.Send");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSensorName
entryRuleSensorName returns [String current=null]:
	{ newCompositeNode(grammarAccess.getSensorNameRule()); }
	iv_ruleSensorName=ruleSensorName
	{ $current=$iv_ruleSensorName.current.getText(); }
	EOF;

// Rule SensorName
ruleSensorName returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		kw='light'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSensorNameAccess().getLightKeyword_0());
		}
		    |
		kw='temperature'
		{
			$current.merge(kw);
			newLeafNode(kw, grammarAccess.getSensorNameAccess().getTemperatureKeyword_1());
		}
	)
;

// Entry rule entryRuleOutput
entryRuleOutput returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOutputRule()); }
	iv_ruleOutput=ruleOutput
	{ $current=$iv_ruleOutput.current; }
	EOF;

// Rule Output
ruleOutput returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='output'
		{
			newLeafNode(otherlv_0, grammarAccess.getOutputAccess().getOutputKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getOutputAccess().getReadingNamesReadingNameParserRuleCall_1_0());
				}
				lv_readingNames_1_0=ruleReadingName
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOutputRule());
					}
					add(
						$current,
						"readingNames",
						lv_readingNames_1_0,
						"org.group9.IOTConnector.ReadingName");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_2=','
			{
				newLeafNode(otherlv_2, grammarAccess.getOutputAccess().getCommaKeyword_2_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOutputAccess().getReadingNamesReadingNameParserRuleCall_2_1_0());
					}
					lv_readingNames_3_0=ruleReadingName
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOutputRule());
						}
						add(
							$current,
							"readingNames",
							lv_readingNames_3_0,
							"org.group9.IOTConnector.ReadingName");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFunctionAccess().getSampleParserRuleCall_0());
		}
		this_Sample_0=ruleSample
		{
			$current = $this_Sample_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionAccess().getFilterParserRuleCall_1());
		}
		this_Filter_1=ruleFilter
		{
			$current = $this_Filter_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getFunctionAccess().getProcessParserRuleCall_2());
		}
		this_Process_2=ruleProcess
		{
			$current = $this_Process_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSample
entryRuleSample returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSampleRule()); }
	iv_ruleSample=ruleSample
	{ $current=$iv_ruleSample.current; }
	EOF;

// Rule Sample
ruleSample returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='sample'
		{
			newLeafNode(otherlv_0, grammarAccess.getSampleAccess().getSampleKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSampleAccess().getSampleActionsSampleActionParserRuleCall_1_0());
				}
				lv_sampleActions_1_0=ruleSampleAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSampleRule());
					}
					add(
						$current,
						"sampleActions",
						lv_sampleActions_1_0,
						"org.group9.IOTConnector.SampleAction");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleSampleAction
entryRuleSampleAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSampleActionRule()); }
	iv_ruleSampleAction=ruleSampleAction
	{ $current=$iv_ruleSampleAction.current; }
	EOF;

// Rule SampleAction
ruleSampleAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSampleActionRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getSampleActionAccess().getReadingNameReadingNameCrossReference_0_0());
				}
			)
		)
		(
			otherlv_1='when'
			{
				newLeafNode(otherlv_1, grammarAccess.getSampleActionAccess().getWhenKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getSampleActionAccess().getReadingNameToCompareReadingNameWithConfigScopeParserRuleCall_1_1_0());
					}
					lv_readingNameToCompare_2_0=ruleReadingNameWithConfigScope
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSampleActionRule());
						}
						set(
							$current,
							"readingNameToCompare",
							lv_readingNameToCompare_2_0,
							"org.group9.IOTConnector.ReadingNameWithConfigScope");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getSampleActionAccess().getRelationalOperatorRelationalOperatorParserRuleCall_1_2_0());
					}
					lv_relationalOperator_3_0=ruleRelationalOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getSampleActionRule());
						}
						set(
							$current,
							"relationalOperator",
							lv_relationalOperator_3_0,
							"org.group9.IOTConnector.RelationalOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					lv_number_4_0=RULE_INT
					{
						newLeafNode(lv_number_4_0, grammarAccess.getSampleActionAccess().getNumberINTTerminalRuleCall_1_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getSampleActionRule());
						}
						setWithLastConsumed(
							$current,
							"number",
							lv_number_4_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)?
		otherlv_5='every'
		{
			newLeafNode(otherlv_5, grammarAccess.getSampleActionAccess().getEveryKeyword_2());
		}
		(
			(
				lv_amountOfTime_6_0=RULE_INT
				{
					newLeafNode(lv_amountOfTime_6_0, grammarAccess.getSampleActionAccess().getAmountOfTimeINTTerminalRuleCall_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSampleActionRule());
					}
					setWithLastConsumed(
						$current,
						"amountOfTime",
						lv_amountOfTime_6_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getSampleActionAccess().getTimeUnitTimeUnitParserRuleCall_4_0());
				}
				lv_timeUnit_7_0=ruleTimeUnit
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSampleActionRule());
					}
					set(
						$current,
						"timeUnit",
						lv_timeUnit_7_0,
						"org.group9.IOTConnector.TimeUnit");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleFilter
entryRuleFilter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFilterRule()); }
	iv_ruleFilter=ruleFilter
	{ $current=$iv_ruleFilter.current; }
	EOF;

// Rule Filter
ruleFilter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='filter'
		{
			newLeafNode(otherlv_0, grammarAccess.getFilterAccess().getFilterKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFilterAccess().getFilterActionsFilterActionParserRuleCall_1_0());
				}
				lv_filterActions_1_0=ruleFilterAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFilterRule());
					}
					add(
						$current,
						"filterActions",
						lv_filterActions_1_0,
						"org.group9.IOTConnector.FilterAction");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleFilterAction
entryRuleFilterAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFilterActionRule()); }
	iv_ruleFilterAction=ruleFilterAction
	{ $current=$iv_ruleFilterAction.current; }
	EOF;

// Rule FilterAction
ruleFilterAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFilterActionRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getFilterActionAccess().getReadingNameReadingNameCrossReference_0_0());
				}
			)
		)
		otherlv_1='use'
		{
			newLeafNode(otherlv_1, grammarAccess.getFilterActionAccess().getUseKeyword_1());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getFilterActionAccess().getFilterTypeFilterTypeParserRuleCall_2_0_0_0());
						}
						lv_filterType_2_0=ruleFilterType
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFilterActionRule());
							}
							set(
								$current,
								"filterType",
								lv_filterType_2_0,
								"org.group9.IOTConnector.FilterType");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_3='with'
				{
					newLeafNode(otherlv_3, grammarAccess.getFilterActionAccess().getWithKeyword_2_0_1());
				}
				(
					(
						lv_number_4_0=RULE_INT
						{
							newLeafNode(lv_number_4_0, grammarAccess.getFilterActionAccess().getNumberINTTerminalRuleCall_2_0_2_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getFilterActionRule());
							}
							setWithLastConsumed(
								$current,
								"number",
								lv_number_4_0,
								"org.eclipse.xtext.common.Terminals.INT");
						}
					)
				)
				otherlv_5='values'
				{
					newLeafNode(otherlv_5, grammarAccess.getFilterActionAccess().getValuesKeyword_2_0_3());
				}
			)
			    |
			(
				(
					{
						newCompositeNode(grammarAccess.getFilterActionAccess().getFilterExpFilterExpParserRuleCall_2_1_0());
					}
					lv_filterExp_6_0=ruleFilterExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFilterActionRule());
						}
						set(
							$current,
							"filterExp",
							lv_filterExp_6_0,
							"org.group9.IOTConnector.FilterExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Entry rule entryRuleFilterExp
entryRuleFilterExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFilterExpRule()); }
	iv_ruleFilterExp=ruleFilterExp
	{ $current=$iv_ruleFilterExp.current; }
	EOF;

// Rule FilterExp
ruleFilterExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getFilterExpAccess().getReadingNameReadingNameWithConfigScopeParserRuleCall_0_0());
				}
				lv_readingName_0_0=ruleReadingNameWithConfigScope
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFilterExpRule());
					}
					set(
						$current,
						"readingName",
						lv_readingName_0_0,
						"org.group9.IOTConnector.ReadingNameWithConfigScope");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getFilterExpAccess().getRelationalOperatorRelationalOperatorParserRuleCall_1_0());
				}
				lv_relationalOperator_1_0=ruleRelationalOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFilterExpRule());
					}
					set(
						$current,
						"relationalOperator",
						lv_relationalOperator_1_0,
						"org.group9.IOTConnector.RelationalOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_number_2_0=RULE_INT
				{
					newLeafNode(lv_number_2_0, grammarAccess.getFilterExpAccess().getNumberINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFilterExpRule());
					}
					setWithLastConsumed(
						$current,
						"number",
						lv_number_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFilterExpAccess().getBitwiseOperatorBitwiseOperatorParserRuleCall_3_0_0());
					}
					lv_bitwiseOperator_3_0=ruleBitwiseOperator
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFilterExpRule());
						}
						set(
							$current,
							"bitwiseOperator",
							lv_bitwiseOperator_3_0,
							"org.group9.IOTConnector.BitwiseOperator");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getFilterExpAccess().getFilterExpFilterExpParserRuleCall_3_1_0());
					}
					lv_filterExp_4_0=ruleFilterExp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFilterExpRule());
						}
						set(
							$current,
							"filterExp",
							lv_filterExp_4_0,
							"org.group9.IOTConnector.FilterExp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleProcess
entryRuleProcess returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessRule()); }
	iv_ruleProcess=ruleProcess
	{ $current=$iv_ruleProcess.current; }
	EOF;

// Rule Process
ruleProcess returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='process'
		{
			newLeafNode(otherlv_0, grammarAccess.getProcessAccess().getProcessKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessAccess().getProcessActionsProcessActionParserRuleCall_1_0());
				}
				lv_processActions_1_0=ruleProcessAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessRule());
					}
					add(
						$current,
						"processActions",
						lv_processActions_1_0,
						"org.group9.IOTConnector.ProcessAction");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleProcessAction
entryRuleProcessAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getProcessActionRule()); }
	iv_ruleProcessAction=ruleProcessAction
	{ $current=$iv_ruleProcessAction.current; }
	EOF;

// Rule ProcessAction
ruleProcessAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getProcessActionRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getProcessActionAccess().getReadingNameReadingNameCrossReference_0_0());
				}
			)
		)
		otherlv_1='is'
		{
			newLeafNode(otherlv_1, grammarAccess.getProcessActionAccess().getIsKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getProcessActionAccess().getExpExpParserRuleCall_2_0());
				}
				lv_exp_2_0=ruleExp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getProcessActionRule());
					}
					set(
						$current,
						"exp",
						lv_exp_2_0,
						"org.group9.IOTConnector.Exp");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExp
entryRuleExp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExpRule()); }
	iv_ruleExp=ruleExp
	{ $current=$iv_ruleExp.current; }
	EOF;

// Rule Exp
ruleExp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getExpAccess().getFactorParserRuleCall_0());
		}
		this_Factor_0=ruleFactor
		{
			$current = $this_Factor_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					otherlv_1='+'
					{
						newLeafNode(otherlv_1, grammarAccess.getExpAccess().getPlusSignKeyword_1_0_0_0());
					}
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpAccess().getPlusLeftAction_1_0_0_1(),
								$current);
						}
					)
				)
				    |
				(
					otherlv_3='-'
					{
						newLeafNode(otherlv_3, grammarAccess.getExpAccess().getHyphenMinusKeyword_1_0_1_0());
					}
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getExpAccess().getMinusLeftAction_1_0_1_1(),
								$current);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getExpAccess().getRightFactorParserRuleCall_1_1_0());
					}
					lv_right_5_0=ruleFactor
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getExpRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"org.group9.IOTConnector.Factor");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleFactor
entryRuleFactor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFactorRule()); }
	iv_ruleFactor=ruleFactor
	{ $current=$iv_ruleFactor.current; }
	EOF;

// Rule Factor
ruleFactor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getFactorAccess().getPrimaryParserRuleCall_0());
		}
		this_Primary_0=rulePrimary
		{
			$current = $this_Primary_0.current;
			afterParserOrEnumRuleCall();
		}
		(
			(
				(
					otherlv_1='*'
					{
						newLeafNode(otherlv_1, grammarAccess.getFactorAccess().getAsteriskKeyword_1_0_0_0());
					}
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getFactorAccess().getMultLeftAction_1_0_0_1(),
								$current);
						}
					)
				)
				    |
				(
					otherlv_3='/'
					{
						newLeafNode(otherlv_3, grammarAccess.getFactorAccess().getSolidusKeyword_1_0_1_0());
					}
					(
						{
							$current = forceCreateModelElementAndSet(
								grammarAccess.getFactorAccess().getDivLeftAction_1_0_1_1(),
								$current);
						}
					)
				)
			)
			(
				(
					{
						newCompositeNode(grammarAccess.getFactorAccess().getRightPrimaryParserRuleCall_1_1_0());
					}
					lv_right_5_0=rulePrimary
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFactorRule());
						}
						set(
							$current,
							"right",
							lv_right_5_0,
							"org.group9.IOTConnector.Primary");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePrimary
entryRulePrimary returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryRule()); }
	iv_rulePrimary=rulePrimary
	{ $current=$iv_rulePrimary.current; }
	EOF;

// Rule Primary
rulePrimary returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getNumberParserRuleCall_0());
		}
		this_Number_0=ruleNumber
		{
			$current = $this_Number_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getParenthesisParserRuleCall_1());
		}
		this_Parenthesis_1=ruleParenthesis
		{
			$current = $this_Parenthesis_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryAccess().getVariableParserRuleCall_2());
		}
		this_Variable_2=ruleVariable
		{
			$current = $this_Variable_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleNumber
entryRuleNumber returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNumberRule()); }
	iv_ruleNumber=ruleNumber
	{ $current=$iv_ruleNumber.current; }
	EOF;

// Rule Number
ruleNumber returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getNumberAccess().getNumAction_0(),
					$current);
			}
		)
		(
			(
				lv_value_1_0=RULE_INT
				{
					newLeafNode(lv_value_1_0, grammarAccess.getNumberAccess().getValueINTTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getNumberRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_1_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleParenthesis
entryRuleParenthesis returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParenthesisRule()); }
	iv_ruleParenthesis=ruleParenthesis
	{ $current=$iv_ruleParenthesis.current; }
	EOF;

// Rule Parenthesis
ruleParenthesis returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='('
		{
			newLeafNode(otherlv_0, grammarAccess.getParenthesisAccess().getLeftParenthesisKeyword_0());
		}
		{
			newCompositeNode(grammarAccess.getParenthesisAccess().getExpParserRuleCall_1());
		}
		this_Exp_1=ruleExp
		{
			$current = $this_Exp_1.current;
			afterParserOrEnumRuleCall();
		}
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getParenthesisAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getVariableAccess().getVarAction_0(),
					$current);
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableAccess().getReadingNameReadingNameWithConfigScopeParserRuleCall_1_0());
				}
				lv_readingName_1_0=ruleReadingNameWithConfigScope
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableRule());
					}
					set(
						$current,
						"readingName",
						lv_readingName_1_0,
						"org.group9.IOTConnector.ReadingNameWithConfigScope");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleSend
entryRuleSend returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSendRule()); }
	iv_ruleSend=ruleSend
	{ $current=$iv_ruleSend.current; }
	EOF;

// Rule Send
ruleSend returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='send'
		{
			newLeafNode(otherlv_0, grammarAccess.getSendAccess().getSendKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSendAccess().getSendActionsSendActionParserRuleCall_1_0());
				}
				lv_sendActions_1_0=ruleSendAction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSendRule());
					}
					add(
						$current,
						"sendActions",
						lv_sendActions_1_0,
						"org.group9.IOTConnector.SendAction");
					afterParserOrEnumRuleCall();
				}
			)
		)+
	)
;

// Entry rule entryRuleSendAction
entryRuleSendAction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSendActionRule()); }
	iv_ruleSendAction=ruleSendAction
	{ $current=$iv_ruleSendAction.current; }
	EOF;

// Rule SendAction
ruleSendAction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSendActionRule());
					}
				}
				otherlv_0=RULE_ID
				{
					newLeafNode(otherlv_0, grammarAccess.getSendActionAccess().getReadingNameReadingNameCrossReference_0_0());
				}
			)
		)
		otherlv_1='when'
		{
			newLeafNode(otherlv_1, grammarAccess.getSendActionAccess().getWhenKeyword_1());
		}
		otherlv_2='samples'
		{
			newLeafNode(otherlv_2, grammarAccess.getSendActionAccess().getSamplesKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getSendActionAccess().getRelationalOperatorRelationalOperatorParserRuleCall_3_0());
				}
				lv_relationalOperator_3_0=ruleRelationalOperator
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSendActionRule());
					}
					set(
						$current,
						"relationalOperator",
						lv_relationalOperator_3_0,
						"org.group9.IOTConnector.RelationalOperator");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				lv_number_4_0=RULE_INT
				{
					newLeafNode(lv_number_4_0, grammarAccess.getSendActionAccess().getNumberINTTerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSendActionRule());
					}
					setWithLastConsumed(
						$current,
						"number",
						lv_number_4_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
	)
;

// Entry rule entryRuleReadingName
entryRuleReadingName returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReadingNameRule()); }
	iv_ruleReadingName=ruleReadingName
	{ $current=$iv_ruleReadingName.current; }
	EOF;

// Rule ReadingName
ruleReadingName returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_name_0_0=RULE_ID
			{
				newLeafNode(lv_name_0_0, grammarAccess.getReadingNameAccess().getNameIDTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getReadingNameRule());
				}
				setWithLastConsumed(
					$current,
					"name",
					lv_name_0_0,
					"org.eclipse.xtext.common.Terminals.ID");
			}
		)
	)
;

// Entry rule entryRuleReadingNameWithConfigScope
entryRuleReadingNameWithConfigScope returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReadingNameWithConfigScopeRule()); }
	iv_ruleReadingNameWithConfigScope=ruleReadingNameWithConfigScope
	{ $current=$iv_ruleReadingNameWithConfigScope.current; }
	EOF;

// Rule ReadingNameWithConfigScope
ruleReadingNameWithConfigScope returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getReadingNameWithConfigScopeRule());
				}
			}
			otherlv_0=RULE_ID
			{
				newLeafNode(otherlv_0, grammarAccess.getReadingNameWithConfigScopeAccess().getNameReadingNameCrossReference_0());
			}
		)
	)
;

// Entry rule entryRuleBitwiseOperator
entryRuleBitwiseOperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBitwiseOperatorRule()); }
	iv_ruleBitwiseOperator=ruleBitwiseOperator
	{ $current=$iv_ruleBitwiseOperator.current; }
	EOF;

// Rule BitwiseOperator
ruleBitwiseOperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_1='AND'
				{
					newLeafNode(lv_value_0_1, grammarAccess.getBitwiseOperatorAccess().getValueANDKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBitwiseOperatorRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_1, null);
				}
				    |
				lv_value_0_2='OR'
				{
					newLeafNode(lv_value_0_2, grammarAccess.getBitwiseOperatorAccess().getValueORKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBitwiseOperatorRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_2, null);
				}
			)
		)
	)
;

// Entry rule entryRuleRelationalOperator
entryRuleRelationalOperator returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRelationalOperatorRule()); }
	iv_ruleRelationalOperator=ruleRelationalOperator
	{ $current=$iv_ruleRelationalOperator.current; }
	EOF;

// Rule RelationalOperator
ruleRelationalOperator returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_1='>'
				{
					newLeafNode(lv_value_0_1, grammarAccess.getRelationalOperatorAccess().getValueGreaterThanSignKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationalOperatorRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_1, null);
				}
				    |
				lv_value_0_2='>='
				{
					newLeafNode(lv_value_0_2, grammarAccess.getRelationalOperatorAccess().getValueGreaterThanSignEqualsSignKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationalOperatorRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_2, null);
				}
				    |
				lv_value_0_3='=='
				{
					newLeafNode(lv_value_0_3, grammarAccess.getRelationalOperatorAccess().getValueEqualsSignEqualsSignKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationalOperatorRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_3, null);
				}
				    |
				lv_value_0_4='<='
				{
					newLeafNode(lv_value_0_4, grammarAccess.getRelationalOperatorAccess().getValueLessThanSignEqualsSignKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationalOperatorRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_4, null);
				}
				    |
				lv_value_0_5='<'
				{
					newLeafNode(lv_value_0_5, grammarAccess.getRelationalOperatorAccess().getValueLessThanSignKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationalOperatorRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_5, null);
				}
				    |
				lv_value_0_6='!='
				{
					newLeafNode(lv_value_0_6, grammarAccess.getRelationalOperatorAccess().getValueExclamationMarkEqualsSignKeyword_0_5());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRelationalOperatorRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_6, null);
				}
			)
		)
	)
;

// Entry rule entryRuleTimeUnit
entryRuleTimeUnit returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeUnitRule()); }
	iv_ruleTimeUnit=ruleTimeUnit
	{ $current=$iv_ruleTimeUnit.current; }
	EOF;

// Rule TimeUnit
ruleTimeUnit returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_1='millisecond'
				{
					newLeafNode(lv_value_0_1, grammarAccess.getTimeUnitAccess().getValueMillisecondKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimeUnitRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_1, null);
				}
				    |
				lv_value_0_2='second'
				{
					newLeafNode(lv_value_0_2, grammarAccess.getTimeUnitAccess().getValueSecondKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimeUnitRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_2, null);
				}
				    |
				lv_value_0_3='minute'
				{
					newLeafNode(lv_value_0_3, grammarAccess.getTimeUnitAccess().getValueMinuteKeyword_0_2());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimeUnitRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_3, null);
				}
				    |
				lv_value_0_4='ms'
				{
					newLeafNode(lv_value_0_4, grammarAccess.getTimeUnitAccess().getValueMsKeyword_0_3());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimeUnitRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_4, null);
				}
				    |
				lv_value_0_5='s'
				{
					newLeafNode(lv_value_0_5, grammarAccess.getTimeUnitAccess().getValueSKeyword_0_4());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimeUnitRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_5, null);
				}
				    |
				lv_value_0_6='m'
				{
					newLeafNode(lv_value_0_6, grammarAccess.getTimeUnitAccess().getValueMKeyword_0_5());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTimeUnitRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_6, null);
				}
			)
		)
	)
;

// Entry rule entryRuleFilterType
entryRuleFilterType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFilterTypeRule()); }
	iv_ruleFilterType=ruleFilterType
	{ $current=$iv_ruleFilterType.current; }
	EOF;

// Rule FilterType
ruleFilterType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_value_0_1='medianfilter'
				{
					newLeafNode(lv_value_0_1, grammarAccess.getFilterTypeAccess().getValueMedianfilterKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFilterTypeRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_1, null);
				}
				    |
				lv_value_0_2='meanfilter'
				{
					newLeafNode(lv_value_0_2, grammarAccess.getFilterTypeAccess().getValueMeanfilterKeyword_0_1());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFilterTypeRule());
					}
					setWithLastConsumed($current, "value", lv_value_0_2, null);
				}
			)
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
