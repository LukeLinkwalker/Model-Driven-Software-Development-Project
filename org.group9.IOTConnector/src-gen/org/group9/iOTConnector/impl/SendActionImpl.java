/**
 * generated by Xtext 2.21.0
 */
package org.group9.iOTConnector.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.group9.iOTConnector.IOTConnectorPackage;
import org.group9.iOTConnector.ReadingName;
import org.group9.iOTConnector.RelationalOperator;
import org.group9.iOTConnector.SendAction;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Send Action</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.group9.iOTConnector.impl.SendActionImpl#getReadingName <em>Reading Name</em>}</li>
 *   <li>{@link org.group9.iOTConnector.impl.SendActionImpl#getRelationalOperator <em>Relational Operator</em>}</li>
 *   <li>{@link org.group9.iOTConnector.impl.SendActionImpl#getNumber <em>Number</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SendActionImpl extends MinimalEObjectImpl.Container implements SendAction
{
  /**
   * The cached value of the '{@link #getReadingName() <em>Reading Name</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReadingName()
   * @generated
   * @ordered
   */
  protected ReadingName readingName;

  /**
   * The cached value of the '{@link #getRelationalOperator() <em>Relational Operator</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRelationalOperator()
   * @generated
   * @ordered
   */
  protected RelationalOperator relationalOperator;

  /**
   * The default value of the '{@link #getNumber() <em>Number</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumber()
   * @generated
   * @ordered
   */
  protected static final int NUMBER_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getNumber() <em>Number</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumber()
   * @generated
   * @ordered
   */
  protected int number = NUMBER_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SendActionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return IOTConnectorPackage.Literals.SEND_ACTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReadingName getReadingName()
  {
    if (readingName != null && readingName.eIsProxy())
    {
      InternalEObject oldReadingName = (InternalEObject)readingName;
      readingName = (ReadingName)eResolveProxy(oldReadingName);
      if (readingName != oldReadingName)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, IOTConnectorPackage.SEND_ACTION__READING_NAME, oldReadingName, readingName));
      }
    }
    return readingName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ReadingName basicGetReadingName()
  {
    return readingName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReadingName(ReadingName newReadingName)
  {
    ReadingName oldReadingName = readingName;
    readingName = newReadingName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IOTConnectorPackage.SEND_ACTION__READING_NAME, oldReadingName, readingName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RelationalOperator getRelationalOperator()
  {
    return relationalOperator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRelationalOperator(RelationalOperator newRelationalOperator, NotificationChain msgs)
  {
    RelationalOperator oldRelationalOperator = relationalOperator;
    relationalOperator = newRelationalOperator;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, IOTConnectorPackage.SEND_ACTION__RELATIONAL_OPERATOR, oldRelationalOperator, newRelationalOperator);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRelationalOperator(RelationalOperator newRelationalOperator)
  {
    if (newRelationalOperator != relationalOperator)
    {
      NotificationChain msgs = null;
      if (relationalOperator != null)
        msgs = ((InternalEObject)relationalOperator).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - IOTConnectorPackage.SEND_ACTION__RELATIONAL_OPERATOR, null, msgs);
      if (newRelationalOperator != null)
        msgs = ((InternalEObject)newRelationalOperator).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - IOTConnectorPackage.SEND_ACTION__RELATIONAL_OPERATOR, null, msgs);
      msgs = basicSetRelationalOperator(newRelationalOperator, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IOTConnectorPackage.SEND_ACTION__RELATIONAL_OPERATOR, newRelationalOperator, newRelationalOperator));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getNumber()
  {
    return number;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNumber(int newNumber)
  {
    int oldNumber = number;
    number = newNumber;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IOTConnectorPackage.SEND_ACTION__NUMBER, oldNumber, number));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case IOTConnectorPackage.SEND_ACTION__RELATIONAL_OPERATOR:
        return basicSetRelationalOperator(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case IOTConnectorPackage.SEND_ACTION__READING_NAME:
        if (resolve) return getReadingName();
        return basicGetReadingName();
      case IOTConnectorPackage.SEND_ACTION__RELATIONAL_OPERATOR:
        return getRelationalOperator();
      case IOTConnectorPackage.SEND_ACTION__NUMBER:
        return getNumber();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case IOTConnectorPackage.SEND_ACTION__READING_NAME:
        setReadingName((ReadingName)newValue);
        return;
      case IOTConnectorPackage.SEND_ACTION__RELATIONAL_OPERATOR:
        setRelationalOperator((RelationalOperator)newValue);
        return;
      case IOTConnectorPackage.SEND_ACTION__NUMBER:
        setNumber((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case IOTConnectorPackage.SEND_ACTION__READING_NAME:
        setReadingName((ReadingName)null);
        return;
      case IOTConnectorPackage.SEND_ACTION__RELATIONAL_OPERATOR:
        setRelationalOperator((RelationalOperator)null);
        return;
      case IOTConnectorPackage.SEND_ACTION__NUMBER:
        setNumber(NUMBER_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case IOTConnectorPackage.SEND_ACTION__READING_NAME:
        return readingName != null;
      case IOTConnectorPackage.SEND_ACTION__RELATIONAL_OPERATOR:
        return relationalOperator != null;
      case IOTConnectorPackage.SEND_ACTION__NUMBER:
        return number != NUMBER_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (number: ");
    result.append(number);
    result.append(')');
    return result.toString();
  }

} //SendActionImpl
