/**
 * generated by Xtext 2.21.0
 */
package org.group9.iOTConnector.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.group9.iOTConnector.IOTConnectorPackage;
import org.group9.iOTConnector.ReadingNameWithConfigScope;
import org.group9.iOTConnector.Var;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Var</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.group9.iOTConnector.impl.VarImpl#getReadingName <em>Reading Name</em>}</li>
 * </ul>
 *
 * @generated
 */
public class VarImpl extends ExpressionImpl implements Var
{
  /**
   * The cached value of the '{@link #getReadingName() <em>Reading Name</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReadingName()
   * @generated
   * @ordered
   */
  protected ReadingNameWithConfigScope readingName;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected VarImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return IOTConnectorPackage.Literals.VAR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReadingNameWithConfigScope getReadingName()
  {
    return readingName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetReadingName(ReadingNameWithConfigScope newReadingName, NotificationChain msgs)
  {
    ReadingNameWithConfigScope oldReadingName = readingName;
    readingName = newReadingName;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, IOTConnectorPackage.VAR__READING_NAME, oldReadingName, newReadingName);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReadingName(ReadingNameWithConfigScope newReadingName)
  {
    if (newReadingName != readingName)
    {
      NotificationChain msgs = null;
      if (readingName != null)
        msgs = ((InternalEObject)readingName).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - IOTConnectorPackage.VAR__READING_NAME, null, msgs);
      if (newReadingName != null)
        msgs = ((InternalEObject)newReadingName).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - IOTConnectorPackage.VAR__READING_NAME, null, msgs);
      msgs = basicSetReadingName(newReadingName, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IOTConnectorPackage.VAR__READING_NAME, newReadingName, newReadingName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case IOTConnectorPackage.VAR__READING_NAME:
        return basicSetReadingName(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case IOTConnectorPackage.VAR__READING_NAME:
        return getReadingName();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case IOTConnectorPackage.VAR__READING_NAME:
        setReadingName((ReadingNameWithConfigScope)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case IOTConnectorPackage.VAR__READING_NAME:
        setReadingName((ReadingNameWithConfigScope)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case IOTConnectorPackage.VAR__READING_NAME:
        return readingName != null;
    }
    return super.eIsSet(featureID);
  }

} //VarImpl
