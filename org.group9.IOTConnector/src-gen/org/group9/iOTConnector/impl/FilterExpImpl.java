/**
 * generated by Xtext 2.21.0
 */
package org.group9.iOTConnector.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.group9.iOTConnector.BitwiseOperator;
import org.group9.iOTConnector.FilterExp;
import org.group9.iOTConnector.IOTConnectorPackage;
import org.group9.iOTConnector.ReadingNameWithConfigScope;
import org.group9.iOTConnector.RelationalOperator;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Filter Exp</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.group9.iOTConnector.impl.FilterExpImpl#getReadingName <em>Reading Name</em>}</li>
 *   <li>{@link org.group9.iOTConnector.impl.FilterExpImpl#getRelationalOperator <em>Relational Operator</em>}</li>
 *   <li>{@link org.group9.iOTConnector.impl.FilterExpImpl#getNumber <em>Number</em>}</li>
 *   <li>{@link org.group9.iOTConnector.impl.FilterExpImpl#getBitwiseOperator <em>Bitwise Operator</em>}</li>
 *   <li>{@link org.group9.iOTConnector.impl.FilterExpImpl#getFilterExp <em>Filter Exp</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FilterExpImpl extends MinimalEObjectImpl.Container implements FilterExp
{
  /**
   * The cached value of the '{@link #getReadingName() <em>Reading Name</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReadingName()
   * @generated
   * @ordered
   */
  protected ReadingNameWithConfigScope readingName;

  /**
   * The cached value of the '{@link #getRelationalOperator() <em>Relational Operator</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRelationalOperator()
   * @generated
   * @ordered
   */
  protected RelationalOperator relationalOperator;

  /**
   * The default value of the '{@link #getNumber() <em>Number</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumber()
   * @generated
   * @ordered
   */
  protected static final int NUMBER_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getNumber() <em>Number</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumber()
   * @generated
   * @ordered
   */
  protected int number = NUMBER_EDEFAULT;

  /**
   * The cached value of the '{@link #getBitwiseOperator() <em>Bitwise Operator</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBitwiseOperator()
   * @generated
   * @ordered
   */
  protected BitwiseOperator bitwiseOperator;

  /**
   * The cached value of the '{@link #getFilterExp() <em>Filter Exp</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFilterExp()
   * @generated
   * @ordered
   */
  protected FilterExp filterExp;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FilterExpImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return IOTConnectorPackage.Literals.FILTER_EXP;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ReadingNameWithConfigScope getReadingName()
  {
    return readingName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetReadingName(ReadingNameWithConfigScope newReadingName, NotificationChain msgs)
  {
    ReadingNameWithConfigScope oldReadingName = readingName;
    readingName = newReadingName;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, IOTConnectorPackage.FILTER_EXP__READING_NAME, oldReadingName, newReadingName);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setReadingName(ReadingNameWithConfigScope newReadingName)
  {
    if (newReadingName != readingName)
    {
      NotificationChain msgs = null;
      if (readingName != null)
        msgs = ((InternalEObject)readingName).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - IOTConnectorPackage.FILTER_EXP__READING_NAME, null, msgs);
      if (newReadingName != null)
        msgs = ((InternalEObject)newReadingName).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - IOTConnectorPackage.FILTER_EXP__READING_NAME, null, msgs);
      msgs = basicSetReadingName(newReadingName, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IOTConnectorPackage.FILTER_EXP__READING_NAME, newReadingName, newReadingName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RelationalOperator getRelationalOperator()
  {
    return relationalOperator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRelationalOperator(RelationalOperator newRelationalOperator, NotificationChain msgs)
  {
    RelationalOperator oldRelationalOperator = relationalOperator;
    relationalOperator = newRelationalOperator;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, IOTConnectorPackage.FILTER_EXP__RELATIONAL_OPERATOR, oldRelationalOperator, newRelationalOperator);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRelationalOperator(RelationalOperator newRelationalOperator)
  {
    if (newRelationalOperator != relationalOperator)
    {
      NotificationChain msgs = null;
      if (relationalOperator != null)
        msgs = ((InternalEObject)relationalOperator).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - IOTConnectorPackage.FILTER_EXP__RELATIONAL_OPERATOR, null, msgs);
      if (newRelationalOperator != null)
        msgs = ((InternalEObject)newRelationalOperator).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - IOTConnectorPackage.FILTER_EXP__RELATIONAL_OPERATOR, null, msgs);
      msgs = basicSetRelationalOperator(newRelationalOperator, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IOTConnectorPackage.FILTER_EXP__RELATIONAL_OPERATOR, newRelationalOperator, newRelationalOperator));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getNumber()
  {
    return number;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNumber(int newNumber)
  {
    int oldNumber = number;
    number = newNumber;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IOTConnectorPackage.FILTER_EXP__NUMBER, oldNumber, number));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public BitwiseOperator getBitwiseOperator()
  {
    return bitwiseOperator;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetBitwiseOperator(BitwiseOperator newBitwiseOperator, NotificationChain msgs)
  {
    BitwiseOperator oldBitwiseOperator = bitwiseOperator;
    bitwiseOperator = newBitwiseOperator;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, IOTConnectorPackage.FILTER_EXP__BITWISE_OPERATOR, oldBitwiseOperator, newBitwiseOperator);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setBitwiseOperator(BitwiseOperator newBitwiseOperator)
  {
    if (newBitwiseOperator != bitwiseOperator)
    {
      NotificationChain msgs = null;
      if (bitwiseOperator != null)
        msgs = ((InternalEObject)bitwiseOperator).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - IOTConnectorPackage.FILTER_EXP__BITWISE_OPERATOR, null, msgs);
      if (newBitwiseOperator != null)
        msgs = ((InternalEObject)newBitwiseOperator).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - IOTConnectorPackage.FILTER_EXP__BITWISE_OPERATOR, null, msgs);
      msgs = basicSetBitwiseOperator(newBitwiseOperator, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IOTConnectorPackage.FILTER_EXP__BITWISE_OPERATOR, newBitwiseOperator, newBitwiseOperator));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public FilterExp getFilterExp()
  {
    return filterExp;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFilterExp(FilterExp newFilterExp, NotificationChain msgs)
  {
    FilterExp oldFilterExp = filterExp;
    filterExp = newFilterExp;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, IOTConnectorPackage.FILTER_EXP__FILTER_EXP, oldFilterExp, newFilterExp);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setFilterExp(FilterExp newFilterExp)
  {
    if (newFilterExp != filterExp)
    {
      NotificationChain msgs = null;
      if (filterExp != null)
        msgs = ((InternalEObject)filterExp).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - IOTConnectorPackage.FILTER_EXP__FILTER_EXP, null, msgs);
      if (newFilterExp != null)
        msgs = ((InternalEObject)newFilterExp).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - IOTConnectorPackage.FILTER_EXP__FILTER_EXP, null, msgs);
      msgs = basicSetFilterExp(newFilterExp, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, IOTConnectorPackage.FILTER_EXP__FILTER_EXP, newFilterExp, newFilterExp));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case IOTConnectorPackage.FILTER_EXP__READING_NAME:
        return basicSetReadingName(null, msgs);
      case IOTConnectorPackage.FILTER_EXP__RELATIONAL_OPERATOR:
        return basicSetRelationalOperator(null, msgs);
      case IOTConnectorPackage.FILTER_EXP__BITWISE_OPERATOR:
        return basicSetBitwiseOperator(null, msgs);
      case IOTConnectorPackage.FILTER_EXP__FILTER_EXP:
        return basicSetFilterExp(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case IOTConnectorPackage.FILTER_EXP__READING_NAME:
        return getReadingName();
      case IOTConnectorPackage.FILTER_EXP__RELATIONAL_OPERATOR:
        return getRelationalOperator();
      case IOTConnectorPackage.FILTER_EXP__NUMBER:
        return getNumber();
      case IOTConnectorPackage.FILTER_EXP__BITWISE_OPERATOR:
        return getBitwiseOperator();
      case IOTConnectorPackage.FILTER_EXP__FILTER_EXP:
        return getFilterExp();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case IOTConnectorPackage.FILTER_EXP__READING_NAME:
        setReadingName((ReadingNameWithConfigScope)newValue);
        return;
      case IOTConnectorPackage.FILTER_EXP__RELATIONAL_OPERATOR:
        setRelationalOperator((RelationalOperator)newValue);
        return;
      case IOTConnectorPackage.FILTER_EXP__NUMBER:
        setNumber((Integer)newValue);
        return;
      case IOTConnectorPackage.FILTER_EXP__BITWISE_OPERATOR:
        setBitwiseOperator((BitwiseOperator)newValue);
        return;
      case IOTConnectorPackage.FILTER_EXP__FILTER_EXP:
        setFilterExp((FilterExp)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case IOTConnectorPackage.FILTER_EXP__READING_NAME:
        setReadingName((ReadingNameWithConfigScope)null);
        return;
      case IOTConnectorPackage.FILTER_EXP__RELATIONAL_OPERATOR:
        setRelationalOperator((RelationalOperator)null);
        return;
      case IOTConnectorPackage.FILTER_EXP__NUMBER:
        setNumber(NUMBER_EDEFAULT);
        return;
      case IOTConnectorPackage.FILTER_EXP__BITWISE_OPERATOR:
        setBitwiseOperator((BitwiseOperator)null);
        return;
      case IOTConnectorPackage.FILTER_EXP__FILTER_EXP:
        setFilterExp((FilterExp)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case IOTConnectorPackage.FILTER_EXP__READING_NAME:
        return readingName != null;
      case IOTConnectorPackage.FILTER_EXP__RELATIONAL_OPERATOR:
        return relationalOperator != null;
      case IOTConnectorPackage.FILTER_EXP__NUMBER:
        return number != NUMBER_EDEFAULT;
      case IOTConnectorPackage.FILTER_EXP__BITWISE_OPERATOR:
        return bitwiseOperator != null;
      case IOTConnectorPackage.FILTER_EXP__FILTER_EXP:
        return filterExp != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (number: ");
    result.append(number);
    result.append(')');
    return result.toString();
  }

} //FilterExpImpl
