/*
 * generated by Xtext 2.21.0
 */
package org.group9.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.group9.ide.contentassist.antlr.internal.InternalIOTConnectorParser;
import org.group9.services.IOTConnectorGrammarAccess;

public class IOTConnectorParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(IOTConnectorGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, IOTConnectorGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getSensorNameAccess().getAlternatives(), "rule__SensorName__Alternatives");
			builder.put(grammarAccess.getFunctionAccess().getAlternatives(), "rule__Function__Alternatives");
			builder.put(grammarAccess.getFilterActionAccess().getAlternatives_2(), "rule__FilterAction__Alternatives_2");
			builder.put(grammarAccess.getExpAccess().getAlternatives_1_0(), "rule__Exp__Alternatives_1_0");
			builder.put(grammarAccess.getFactorAccess().getAlternatives_1_0(), "rule__Factor__Alternatives_1_0");
			builder.put(grammarAccess.getPrimaryAccess().getAlternatives(), "rule__Primary__Alternatives");
			builder.put(grammarAccess.getBitwiseOperatorAccess().getValueAlternatives_0(), "rule__BitwiseOperator__ValueAlternatives_0");
			builder.put(grammarAccess.getRelationalOperatorAccess().getValueAlternatives_0(), "rule__RelationalOperator__ValueAlternatives_0");
			builder.put(grammarAccess.getTimeUnitAccess().getValueAlternatives_0(), "rule__TimeUnit__ValueAlternatives_0");
			builder.put(grammarAccess.getFilterTypeAccess().getValueAlternatives_0(), "rule__FilterType__ValueAlternatives_0");
			builder.put(grammarAccess.getProgramAccess().getGroup(), "rule__Program__Group__0");
			builder.put(grammarAccess.getWebserverAccess().getGroup(), "rule__Webserver__Group__0");
			builder.put(grammarAccess.getWifiAccess().getGroup(), "rule__Wifi__Group__0");
			builder.put(grammarAccess.getConfigAccess().getGroup(), "rule__Config__Group__0");
			builder.put(grammarAccess.getBoardAccess().getGroup(), "rule__Board__Group__0");
			builder.put(grammarAccess.getBoardAccess().getGroup_1(), "rule__Board__Group_1__0");
			builder.put(grammarAccess.getSensorConfigAccess().getGroup(), "rule__SensorConfig__Group__0");
			builder.put(grammarAccess.getSensorConfigAccess().getGroup_2(), "rule__SensorConfig__Group_2__0");
			builder.put(grammarAccess.getSensorAccess().getGroup(), "rule__Sensor__Group__0");
			builder.put(grammarAccess.getOutputAccess().getGroup(), "rule__Output__Group__0");
			builder.put(grammarAccess.getOutputAccess().getGroup_2(), "rule__Output__Group_2__0");
			builder.put(grammarAccess.getSampleAccess().getGroup(), "rule__Sample__Group__0");
			builder.put(grammarAccess.getSampleActionAccess().getGroup(), "rule__SampleAction__Group__0");
			builder.put(grammarAccess.getSampleActionAccess().getGroup_1(), "rule__SampleAction__Group_1__0");
			builder.put(grammarAccess.getFilterAccess().getGroup(), "rule__Filter__Group__0");
			builder.put(grammarAccess.getFilterActionAccess().getGroup(), "rule__FilterAction__Group__0");
			builder.put(grammarAccess.getFilterActionAccess().getGroup_2_0(), "rule__FilterAction__Group_2_0__0");
			builder.put(grammarAccess.getFilterExpAccess().getGroup(), "rule__FilterExp__Group__0");
			builder.put(grammarAccess.getFilterExpAccess().getGroup_3(), "rule__FilterExp__Group_3__0");
			builder.put(grammarAccess.getProcessAccess().getGroup(), "rule__Process__Group__0");
			builder.put(grammarAccess.getProcessActionAccess().getGroup(), "rule__ProcessAction__Group__0");
			builder.put(grammarAccess.getExpAccess().getGroup(), "rule__Exp__Group__0");
			builder.put(grammarAccess.getExpAccess().getGroup_1(), "rule__Exp__Group_1__0");
			builder.put(grammarAccess.getExpAccess().getGroup_1_0_0(), "rule__Exp__Group_1_0_0__0");
			builder.put(grammarAccess.getExpAccess().getGroup_1_0_1(), "rule__Exp__Group_1_0_1__0");
			builder.put(grammarAccess.getFactorAccess().getGroup(), "rule__Factor__Group__0");
			builder.put(grammarAccess.getFactorAccess().getGroup_1(), "rule__Factor__Group_1__0");
			builder.put(grammarAccess.getFactorAccess().getGroup_1_0_0(), "rule__Factor__Group_1_0_0__0");
			builder.put(grammarAccess.getFactorAccess().getGroup_1_0_1(), "rule__Factor__Group_1_0_1__0");
			builder.put(grammarAccess.getNumberAccess().getGroup(), "rule__Number__Group__0");
			builder.put(grammarAccess.getParenthesisAccess().getGroup(), "rule__Parenthesis__Group__0");
			builder.put(grammarAccess.getVariableAccess().getGroup(), "rule__Variable__Group__0");
			builder.put(grammarAccess.getSendAccess().getGroup(), "rule__Send__Group__0");
			builder.put(grammarAccess.getSendActionAccess().getGroup(), "rule__SendAction__Group__0");
			builder.put(grammarAccess.getProgramAccess().getWebserverAssignment_0(), "rule__Program__WebserverAssignment_0");
			builder.put(grammarAccess.getProgramAccess().getWifisAssignment_1(), "rule__Program__WifisAssignment_1");
			builder.put(grammarAccess.getProgramAccess().getConfigsAssignment_2(), "rule__Program__ConfigsAssignment_2");
			builder.put(grammarAccess.getProgramAccess().getBoardsAssignment_3(), "rule__Program__BoardsAssignment_3");
			builder.put(grammarAccess.getWebserverAccess().getUrlAssignment_5(), "rule__Webserver__UrlAssignment_5");
			builder.put(grammarAccess.getWebserverAccess().getPortAssignment_9(), "rule__Webserver__PortAssignment_9");
			builder.put(grammarAccess.getWifiAccess().getSsidAssignment_5(), "rule__Wifi__SsidAssignment_5");
			builder.put(grammarAccess.getWifiAccess().getPasswordAssignment_9(), "rule__Wifi__PasswordAssignment_9");
			builder.put(grammarAccess.getConfigAccess().getNameAssignment_1(), "rule__Config__NameAssignment_1");
			builder.put(grammarAccess.getConfigAccess().getSensorsAssignment_2(), "rule__Config__SensorsAssignment_2");
			builder.put(grammarAccess.getBoardAccess().getNameAssignment_1_3(), "rule__Board__NameAssignment_1_3");
			builder.put(grammarAccess.getBoardAccess().getSensorConfigsAssignment_2(), "rule__Board__SensorConfigsAssignment_2");
			builder.put(grammarAccess.getBoardAccess().getConfigNameAssignment_5(), "rule__Board__ConfigNameAssignment_5");
			builder.put(grammarAccess.getSensorConfigAccess().getNameAssignment_1(), "rule__SensorConfig__NameAssignment_1");
			builder.put(grammarAccess.getSensorConfigAccess().getPinInAssignment_2_5(), "rule__SensorConfig__PinInAssignment_2_5");
			builder.put(grammarAccess.getSensorConfigAccess().getPinOutAssignment_2_10(), "rule__SensorConfig__PinOutAssignment_2_10");
			builder.put(grammarAccess.getSensorAccess().getNameAssignment_1(), "rule__Sensor__NameAssignment_1");
			builder.put(grammarAccess.getSensorAccess().getTypeAssignment_2(), "rule__Sensor__TypeAssignment_2");
			builder.put(grammarAccess.getSensorAccess().getOutputAssignment_3(), "rule__Sensor__OutputAssignment_3");
			builder.put(grammarAccess.getSensorAccess().getFunctionsAssignment_4(), "rule__Sensor__FunctionsAssignment_4");
			builder.put(grammarAccess.getSensorAccess().getSendAssignment_5(), "rule__Sensor__SendAssignment_5");
			builder.put(grammarAccess.getOutputAccess().getReadingNamesAssignment_1(), "rule__Output__ReadingNamesAssignment_1");
			builder.put(grammarAccess.getOutputAccess().getReadingNamesAssignment_2_1(), "rule__Output__ReadingNamesAssignment_2_1");
			builder.put(grammarAccess.getSampleAccess().getSampleActionsAssignment_1(), "rule__Sample__SampleActionsAssignment_1");
			builder.put(grammarAccess.getSampleActionAccess().getReadingNameAssignment_0(), "rule__SampleAction__ReadingNameAssignment_0");
			builder.put(grammarAccess.getSampleActionAccess().getReadingNameToCompareAssignment_1_1(), "rule__SampleAction__ReadingNameToCompareAssignment_1_1");
			builder.put(grammarAccess.getSampleActionAccess().getRelationalOperatorAssignment_1_2(), "rule__SampleAction__RelationalOperatorAssignment_1_2");
			builder.put(grammarAccess.getSampleActionAccess().getNumberAssignment_1_3(), "rule__SampleAction__NumberAssignment_1_3");
			builder.put(grammarAccess.getSampleActionAccess().getAmountOfTimeAssignment_3(), "rule__SampleAction__AmountOfTimeAssignment_3");
			builder.put(grammarAccess.getSampleActionAccess().getTimeUnitAssignment_4(), "rule__SampleAction__TimeUnitAssignment_4");
			builder.put(grammarAccess.getFilterAccess().getFilterActionsAssignment_1(), "rule__Filter__FilterActionsAssignment_1");
			builder.put(grammarAccess.getFilterActionAccess().getReadingNameAssignment_0(), "rule__FilterAction__ReadingNameAssignment_0");
			builder.put(grammarAccess.getFilterActionAccess().getFilterTypeAssignment_2_0_0(), "rule__FilterAction__FilterTypeAssignment_2_0_0");
			builder.put(grammarAccess.getFilterActionAccess().getNumberAssignment_2_0_2(), "rule__FilterAction__NumberAssignment_2_0_2");
			builder.put(grammarAccess.getFilterActionAccess().getFilterExpAssignment_2_1(), "rule__FilterAction__FilterExpAssignment_2_1");
			builder.put(grammarAccess.getFilterExpAccess().getReadingNameAssignment_0(), "rule__FilterExp__ReadingNameAssignment_0");
			builder.put(grammarAccess.getFilterExpAccess().getRelationalOperatorAssignment_1(), "rule__FilterExp__RelationalOperatorAssignment_1");
			builder.put(grammarAccess.getFilterExpAccess().getNumberAssignment_2(), "rule__FilterExp__NumberAssignment_2");
			builder.put(grammarAccess.getFilterExpAccess().getBitwiseOperatorAssignment_3_0(), "rule__FilterExp__BitwiseOperatorAssignment_3_0");
			builder.put(grammarAccess.getFilterExpAccess().getFilterExpAssignment_3_1(), "rule__FilterExp__FilterExpAssignment_3_1");
			builder.put(grammarAccess.getProcessAccess().getProcessActionsAssignment_1(), "rule__Process__ProcessActionsAssignment_1");
			builder.put(grammarAccess.getProcessActionAccess().getReadingNameAssignment_0(), "rule__ProcessAction__ReadingNameAssignment_0");
			builder.put(grammarAccess.getProcessActionAccess().getExpAssignment_2(), "rule__ProcessAction__ExpAssignment_2");
			builder.put(grammarAccess.getExpAccess().getRightAssignment_1_1(), "rule__Exp__RightAssignment_1_1");
			builder.put(grammarAccess.getFactorAccess().getRightAssignment_1_1(), "rule__Factor__RightAssignment_1_1");
			builder.put(grammarAccess.getNumberAccess().getValueAssignment_1(), "rule__Number__ValueAssignment_1");
			builder.put(grammarAccess.getVariableAccess().getReadingNameAssignment_1(), "rule__Variable__ReadingNameAssignment_1");
			builder.put(grammarAccess.getSendAccess().getSendActionsAssignment_1(), "rule__Send__SendActionsAssignment_1");
			builder.put(grammarAccess.getSendActionAccess().getReadingNameAssignment_0(), "rule__SendAction__ReadingNameAssignment_0");
			builder.put(grammarAccess.getSendActionAccess().getRelationalOperatorAssignment_3(), "rule__SendAction__RelationalOperatorAssignment_3");
			builder.put(grammarAccess.getSendActionAccess().getNumberAssignment_4(), "rule__SendAction__NumberAssignment_4");
			builder.put(grammarAccess.getReadingNameAccess().getNameAssignment(), "rule__ReadingName__NameAssignment");
			builder.put(grammarAccess.getReadingNameWithConfigScopeAccess().getNameAssignment(), "rule__ReadingNameWithConfigScope__NameAssignment");
			builder.put(grammarAccess.getBitwiseOperatorAccess().getValueAssignment(), "rule__BitwiseOperator__ValueAssignment");
			builder.put(grammarAccess.getRelationalOperatorAccess().getValueAssignment(), "rule__RelationalOperator__ValueAssignment");
			builder.put(grammarAccess.getTimeUnitAccess().getValueAssignment(), "rule__TimeUnit__ValueAssignment");
			builder.put(grammarAccess.getFilterTypeAccess().getValueAssignment(), "rule__FilterType__ValueAssignment");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private IOTConnectorGrammarAccess grammarAccess;

	@Override
	protected InternalIOTConnectorParser createParser() {
		InternalIOTConnectorParser result = new InternalIOTConnectorParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public IOTConnectorGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(IOTConnectorGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
