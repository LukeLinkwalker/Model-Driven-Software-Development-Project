/*
 * generated by Xtext 2.21.0
 */
grammar InternalIOTConnector;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.group9.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.group9.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.group9.services.IOTConnectorGrammarAccess;

}
@parser::members {
	private IOTConnectorGrammarAccess grammarAccess;

	public void setGrammarAccess(IOTConnectorGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getGroup()); }
		(rule__Program__Group__0)
		{ after(grammarAccess.getProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWebserver
entryRuleWebserver
:
{ before(grammarAccess.getWebserverRule()); }
	 ruleWebserver
{ after(grammarAccess.getWebserverRule()); } 
	 EOF 
;

// Rule Webserver
ruleWebserver 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWebserverAccess().getGroup()); }
		(rule__Webserver__Group__0)
		{ after(grammarAccess.getWebserverAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWifi
entryRuleWifi
:
{ before(grammarAccess.getWifiRule()); }
	 ruleWifi
{ after(grammarAccess.getWifiRule()); } 
	 EOF 
;

// Rule Wifi
ruleWifi 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWifiAccess().getGroup()); }
		(rule__Wifi__Group__0)
		{ after(grammarAccess.getWifiAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConfig
entryRuleConfig
:
{ before(grammarAccess.getConfigRule()); }
	 ruleConfig
{ after(grammarAccess.getConfigRule()); } 
	 EOF 
;

// Rule Config
ruleConfig 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConfigAccess().getGroup()); }
		(rule__Config__Group__0)
		{ after(grammarAccess.getConfigAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBoard
entryRuleBoard
:
{ before(grammarAccess.getBoardRule()); }
	 ruleBoard
{ after(grammarAccess.getBoardRule()); } 
	 EOF 
;

// Rule Board
ruleBoard 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoardAccess().getGroup()); }
		(rule__Board__Group__0)
		{ after(grammarAccess.getBoardAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSensorConfig
entryRuleSensorConfig
:
{ before(grammarAccess.getSensorConfigRule()); }
	 ruleSensorConfig
{ after(grammarAccess.getSensorConfigRule()); } 
	 EOF 
;

// Rule SensorConfig
ruleSensorConfig 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSensorConfigAccess().getGroup()); }
		(rule__SensorConfig__Group__0)
		{ after(grammarAccess.getSensorConfigAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSensor
entryRuleSensor
:
{ before(grammarAccess.getSensorRule()); }
	 ruleSensor
{ after(grammarAccess.getSensorRule()); } 
	 EOF 
;

// Rule Sensor
ruleSensor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSensorAccess().getGroup()); }
		(rule__Sensor__Group__0)
		{ after(grammarAccess.getSensorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSensorName
entryRuleSensorName
:
{ before(grammarAccess.getSensorNameRule()); }
	 ruleSensorName
{ after(grammarAccess.getSensorNameRule()); } 
	 EOF 
;

// Rule SensorName
ruleSensorName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSensorNameAccess().getAlternatives()); }
		(rule__SensorName__Alternatives)
		{ after(grammarAccess.getSensorNameAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOutput
entryRuleOutput
:
{ before(grammarAccess.getOutputRule()); }
	 ruleOutput
{ after(grammarAccess.getOutputRule()); } 
	 EOF 
;

// Rule Output
ruleOutput 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOutputAccess().getGroup()); }
		(rule__Output__Group__0)
		{ after(grammarAccess.getOutputAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getAlternatives()); }
		(rule__Function__Alternatives)
		{ after(grammarAccess.getFunctionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSample
entryRuleSample
:
{ before(grammarAccess.getSampleRule()); }
	 ruleSample
{ after(grammarAccess.getSampleRule()); } 
	 EOF 
;

// Rule Sample
ruleSample 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSampleAccess().getGroup()); }
		(rule__Sample__Group__0)
		{ after(grammarAccess.getSampleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSampleAction
entryRuleSampleAction
:
{ before(grammarAccess.getSampleActionRule()); }
	 ruleSampleAction
{ after(grammarAccess.getSampleActionRule()); } 
	 EOF 
;

// Rule SampleAction
ruleSampleAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSampleActionAccess().getGroup()); }
		(rule__SampleAction__Group__0)
		{ after(grammarAccess.getSampleActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFilter
entryRuleFilter
:
{ before(grammarAccess.getFilterRule()); }
	 ruleFilter
{ after(grammarAccess.getFilterRule()); } 
	 EOF 
;

// Rule Filter
ruleFilter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilterAccess().getGroup()); }
		(rule__Filter__Group__0)
		{ after(grammarAccess.getFilterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFilterAction
entryRuleFilterAction
:
{ before(grammarAccess.getFilterActionRule()); }
	 ruleFilterAction
{ after(grammarAccess.getFilterActionRule()); } 
	 EOF 
;

// Rule FilterAction
ruleFilterAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilterActionAccess().getGroup()); }
		(rule__FilterAction__Group__0)
		{ after(grammarAccess.getFilterActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFilterExp
entryRuleFilterExp
:
{ before(grammarAccess.getFilterExpRule()); }
	 ruleFilterExp
{ after(grammarAccess.getFilterExpRule()); } 
	 EOF 
;

// Rule FilterExp
ruleFilterExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilterExpAccess().getGroup()); }
		(rule__FilterExp__Group__0)
		{ after(grammarAccess.getFilterExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcess
entryRuleProcess
:
{ before(grammarAccess.getProcessRule()); }
	 ruleProcess
{ after(grammarAccess.getProcessRule()); } 
	 EOF 
;

// Rule Process
ruleProcess 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessAccess().getGroup()); }
		(rule__Process__Group__0)
		{ after(grammarAccess.getProcessAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProcessAction
entryRuleProcessAction
:
{ before(grammarAccess.getProcessActionRule()); }
	 ruleProcessAction
{ after(grammarAccess.getProcessActionRule()); } 
	 EOF 
;

// Rule ProcessAction
ruleProcessAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProcessActionAccess().getGroup()); }
		(rule__ProcessAction__Group__0)
		{ after(grammarAccess.getProcessActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExp
entryRuleExp
:
{ before(grammarAccess.getExpRule()); }
	 ruleExp
{ after(grammarAccess.getExpRule()); } 
	 EOF 
;

// Rule Exp
ruleExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpAccess().getGroup()); }
		(rule__Exp__Group__0)
		{ after(grammarAccess.getExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFactor
entryRuleFactor
:
{ before(grammarAccess.getFactorRule()); }
	 ruleFactor
{ after(grammarAccess.getFactorRule()); } 
	 EOF 
;

// Rule Factor
ruleFactor 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFactorAccess().getGroup()); }
		(rule__Factor__Group__0)
		{ after(grammarAccess.getFactorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrimary
entryRulePrimary
:
{ before(grammarAccess.getPrimaryRule()); }
	 rulePrimary
{ after(grammarAccess.getPrimaryRule()); } 
	 EOF 
;

// Rule Primary
rulePrimary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrimaryAccess().getAlternatives()); }
		(rule__Primary__Alternatives)
		{ after(grammarAccess.getPrimaryAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNumber
entryRuleNumber
:
{ before(grammarAccess.getNumberRule()); }
	 ruleNumber
{ after(grammarAccess.getNumberRule()); } 
	 EOF 
;

// Rule Number
ruleNumber 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumberAccess().getGroup()); }
		(rule__Number__Group__0)
		{ after(grammarAccess.getNumberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParenthesis
entryRuleParenthesis
:
{ before(grammarAccess.getParenthesisRule()); }
	 ruleParenthesis
{ after(grammarAccess.getParenthesisRule()); } 
	 EOF 
;

// Rule Parenthesis
ruleParenthesis 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParenthesisAccess().getGroup()); }
		(rule__Parenthesis__Group__0)
		{ after(grammarAccess.getParenthesisAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSend
entryRuleSend
:
{ before(grammarAccess.getSendRule()); }
	 ruleSend
{ after(grammarAccess.getSendRule()); } 
	 EOF 
;

// Rule Send
ruleSend 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSendAccess().getGroup()); }
		(rule__Send__Group__0)
		{ after(grammarAccess.getSendAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSendAction
entryRuleSendAction
:
{ before(grammarAccess.getSendActionRule()); }
	 ruleSendAction
{ after(grammarAccess.getSendActionRule()); } 
	 EOF 
;

// Rule SendAction
ruleSendAction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSendActionAccess().getGroup()); }
		(rule__SendAction__Group__0)
		{ after(grammarAccess.getSendActionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReadingName
entryRuleReadingName
:
{ before(grammarAccess.getReadingNameRule()); }
	 ruleReadingName
{ after(grammarAccess.getReadingNameRule()); } 
	 EOF 
;

// Rule ReadingName
ruleReadingName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReadingNameAccess().getNameAssignment()); }
		(rule__ReadingName__NameAssignment)
		{ after(grammarAccess.getReadingNameAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReadingNameWithConfigScope
entryRuleReadingNameWithConfigScope
:
{ before(grammarAccess.getReadingNameWithConfigScopeRule()); }
	 ruleReadingNameWithConfigScope
{ after(grammarAccess.getReadingNameWithConfigScopeRule()); } 
	 EOF 
;

// Rule ReadingNameWithConfigScope
ruleReadingNameWithConfigScope 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReadingNameWithConfigScopeAccess().getNameAssignment()); }
		(rule__ReadingNameWithConfigScope__NameAssignment)
		{ after(grammarAccess.getReadingNameWithConfigScopeAccess().getNameAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBitwiseOperator
entryRuleBitwiseOperator
:
{ before(grammarAccess.getBitwiseOperatorRule()); }
	 ruleBitwiseOperator
{ after(grammarAccess.getBitwiseOperatorRule()); } 
	 EOF 
;

// Rule BitwiseOperator
ruleBitwiseOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBitwiseOperatorAccess().getValueAssignment()); }
		(rule__BitwiseOperator__ValueAssignment)
		{ after(grammarAccess.getBitwiseOperatorAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelationalOperator
entryRuleRelationalOperator
:
{ before(grammarAccess.getRelationalOperatorRule()); }
	 ruleRelationalOperator
{ after(grammarAccess.getRelationalOperatorRule()); } 
	 EOF 
;

// Rule RelationalOperator
ruleRelationalOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getValueAssignment()); }
		(rule__RelationalOperator__ValueAssignment)
		{ after(grammarAccess.getRelationalOperatorAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTimeUnit
entryRuleTimeUnit
:
{ before(grammarAccess.getTimeUnitRule()); }
	 ruleTimeUnit
{ after(grammarAccess.getTimeUnitRule()); } 
	 EOF 
;

// Rule TimeUnit
ruleTimeUnit 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTimeUnitAccess().getValueAssignment()); }
		(rule__TimeUnit__ValueAssignment)
		{ after(grammarAccess.getTimeUnitAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFilterType
entryRuleFilterType
:
{ before(grammarAccess.getFilterTypeRule()); }
	 ruleFilterType
{ after(grammarAccess.getFilterTypeRule()); } 
	 EOF 
;

// Rule FilterType
ruleFilterType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFilterTypeAccess().getValueAssignment()); }
		(rule__FilterType__ValueAssignment)
		{ after(grammarAccess.getFilterTypeAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorName__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorNameAccess().getLightKeyword_0()); }
		'light'
		{ after(grammarAccess.getSensorNameAccess().getLightKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getSensorNameAccess().getTemperatureKeyword_1()); }
		'temperature'
		{ after(grammarAccess.getSensorNameAccess().getTemperatureKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getSampleParserRuleCall_0()); }
		ruleSample
		{ after(grammarAccess.getFunctionAccess().getSampleParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionAccess().getFilterParserRuleCall_1()); }
		ruleFilter
		{ after(grammarAccess.getFunctionAccess().getFilterParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFunctionAccess().getProcessParserRuleCall_2()); }
		ruleProcess
		{ after(grammarAccess.getFunctionAccess().getProcessParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterAction__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterActionAccess().getGroup_2_0()); }
		(rule__FilterAction__Group_2_0__0)
		{ after(grammarAccess.getFilterActionAccess().getGroup_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getFilterActionAccess().getFilterExpAssignment_2_1()); }
		(rule__FilterAction__FilterExpAssignment_2_1)
		{ after(grammarAccess.getFilterActionAccess().getFilterExpAssignment_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpAccess().getGroup_1_0_0()); }
		(rule__Exp__Group_1_0_0__0)
		{ after(grammarAccess.getExpAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpAccess().getGroup_1_0_1()); }
		(rule__Exp__Group_1_0_1__0)
		{ after(grammarAccess.getExpAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Alternatives_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getGroup_1_0_0()); }
		(rule__Factor__Group_1_0_0__0)
		{ after(grammarAccess.getFactorAccess().getGroup_1_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFactorAccess().getGroup_1_0_1()); }
		(rule__Factor__Group_1_0_1__0)
		{ after(grammarAccess.getFactorAccess().getGroup_1_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Primary__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrimaryAccess().getNumberParserRuleCall_0()); }
		ruleNumber
		{ after(grammarAccess.getPrimaryAccess().getNumberParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getParenthesisParserRuleCall_1()); }
		ruleParenthesis
		{ after(grammarAccess.getPrimaryAccess().getParenthesisParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getPrimaryAccess().getVariableParserRuleCall_2()); }
		ruleVariable
		{ after(grammarAccess.getPrimaryAccess().getVariableParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOperator__ValueAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitwiseOperatorAccess().getValueANDKeyword_0_0()); }
		'AND'
		{ after(grammarAccess.getBitwiseOperatorAccess().getValueANDKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getBitwiseOperatorAccess().getValueORKeyword_0_1()); }
		'OR'
		{ after(grammarAccess.getBitwiseOperatorAccess().getValueORKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOperator__ValueAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getValueGreaterThanSignKeyword_0_0()); }
		'>'
		{ after(grammarAccess.getRelationalOperatorAccess().getValueGreaterThanSignKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getValueGreaterThanSignEqualsSignKeyword_0_1()); }
		'>='
		{ after(grammarAccess.getRelationalOperatorAccess().getValueGreaterThanSignEqualsSignKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getValueEqualsSignEqualsSignKeyword_0_2()); }
		'=='
		{ after(grammarAccess.getRelationalOperatorAccess().getValueEqualsSignEqualsSignKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getValueLessThanSignEqualsSignKeyword_0_3()); }
		'<='
		{ after(grammarAccess.getRelationalOperatorAccess().getValueLessThanSignEqualsSignKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getValueLessThanSignKeyword_0_4()); }
		'<'
		{ after(grammarAccess.getRelationalOperatorAccess().getValueLessThanSignKeyword_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getValueExclamationMarkEqualsSignKeyword_0_5()); }
		'!='
		{ after(grammarAccess.getRelationalOperatorAccess().getValueExclamationMarkEqualsSignKeyword_0_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeUnit__ValueAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeUnitAccess().getValueMillisecondKeyword_0_0()); }
		'millisecond'
		{ after(grammarAccess.getTimeUnitAccess().getValueMillisecondKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getValueSecondKeyword_0_1()); }
		'second'
		{ after(grammarAccess.getTimeUnitAccess().getValueSecondKeyword_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getValueMinuteKeyword_0_2()); }
		'minute'
		{ after(grammarAccess.getTimeUnitAccess().getValueMinuteKeyword_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getValueMsKeyword_0_3()); }
		'ms'
		{ after(grammarAccess.getTimeUnitAccess().getValueMsKeyword_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getValueSKeyword_0_4()); }
		's'
		{ after(grammarAccess.getTimeUnitAccess().getValueSKeyword_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getTimeUnitAccess().getValueMKeyword_0_5()); }
		'm'
		{ after(grammarAccess.getTimeUnitAccess().getValueMKeyword_0_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterType__ValueAlternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterTypeAccess().getValueMedianfilterKeyword_0_0()); }
		'medianfilter'
		{ after(grammarAccess.getFilterTypeAccess().getValueMedianfilterKeyword_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getFilterTypeAccess().getValueMeanfilterKeyword_0_1()); }
		'meanfilter'
		{ after(grammarAccess.getFilterTypeAccess().getValueMeanfilterKeyword_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getWebserverAssignment_0()); }
	(rule__Program__WebserverAssignment_0)
	{ after(grammarAccess.getProgramAccess().getWebserverAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getProgramAccess().getWifisAssignment_1()); }
		(rule__Program__WifisAssignment_1)
		{ after(grammarAccess.getProgramAccess().getWifisAssignment_1()); }
	)
	(
		{ before(grammarAccess.getProgramAccess().getWifisAssignment_1()); }
		(rule__Program__WifisAssignment_1)*
		{ after(grammarAccess.getProgramAccess().getWifisAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__2__Impl
	rule__Program__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getProgramAccess().getConfigsAssignment_2()); }
		(rule__Program__ConfigsAssignment_2)
		{ after(grammarAccess.getProgramAccess().getConfigsAssignment_2()); }
	)
	(
		{ before(grammarAccess.getProgramAccess().getConfigsAssignment_2()); }
		(rule__Program__ConfigsAssignment_2)*
		{ after(grammarAccess.getProgramAccess().getConfigsAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getProgramAccess().getBoardsAssignment_3()); }
		(rule__Program__BoardsAssignment_3)
		{ after(grammarAccess.getProgramAccess().getBoardsAssignment_3()); }
	)
	(
		{ before(grammarAccess.getProgramAccess().getBoardsAssignment_3()); }
		(rule__Program__BoardsAssignment_3)*
		{ after(grammarAccess.getProgramAccess().getBoardsAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Webserver__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Webserver__Group__0__Impl
	rule__Webserver__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Webserver__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWebserverAccess().getDefineKeyword_0()); }
	'define'
	{ after(grammarAccess.getWebserverAccess().getDefineKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Webserver__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Webserver__Group__1__Impl
	rule__Webserver__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Webserver__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWebserverAccess().getWebserverKeyword_1()); }
	'webserver'
	{ after(grammarAccess.getWebserverAccess().getWebserverKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Webserver__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Webserver__Group__2__Impl
	rule__Webserver__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Webserver__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWebserverAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getWebserverAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Webserver__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Webserver__Group__3__Impl
	rule__Webserver__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Webserver__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWebserverAccess().getHostKeyword_3()); }
	'host'
	{ after(grammarAccess.getWebserverAccess().getHostKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Webserver__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Webserver__Group__4__Impl
	rule__Webserver__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Webserver__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWebserverAccess().getIsKeyword_4()); }
	'is'
	{ after(grammarAccess.getWebserverAccess().getIsKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Webserver__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Webserver__Group__5__Impl
	rule__Webserver__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Webserver__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWebserverAccess().getUrlAssignment_5()); }
	(rule__Webserver__UrlAssignment_5)
	{ after(grammarAccess.getWebserverAccess().getUrlAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Webserver__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Webserver__Group__6__Impl
	rule__Webserver__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Webserver__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWebserverAccess().getCommaKeyword_6()); }
	','
	{ after(grammarAccess.getWebserverAccess().getCommaKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Webserver__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Webserver__Group__7__Impl
	rule__Webserver__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Webserver__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWebserverAccess().getPortKeyword_7()); }
	'port'
	{ after(grammarAccess.getWebserverAccess().getPortKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Webserver__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Webserver__Group__8__Impl
	rule__Webserver__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Webserver__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWebserverAccess().getIsKeyword_8()); }
	'is'
	{ after(grammarAccess.getWebserverAccess().getIsKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Webserver__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Webserver__Group__9__Impl
	rule__Webserver__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Webserver__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWebserverAccess().getPortAssignment_9()); }
	(rule__Webserver__PortAssignment_9)
	{ after(grammarAccess.getWebserverAccess().getPortAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Webserver__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Webserver__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Webserver__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWebserverAccess().getRightParenthesisKeyword_10()); }
	')'
	{ after(grammarAccess.getWebserverAccess().getRightParenthesisKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Wifi__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wifi__Group__0__Impl
	rule__Wifi__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Wifi__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWifiAccess().getDefineKeyword_0()); }
	'define'
	{ after(grammarAccess.getWifiAccess().getDefineKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wifi__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wifi__Group__1__Impl
	rule__Wifi__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Wifi__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWifiAccess().getWifiKeyword_1()); }
	'wifi'
	{ after(grammarAccess.getWifiAccess().getWifiKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wifi__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wifi__Group__2__Impl
	rule__Wifi__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Wifi__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWifiAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getWifiAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wifi__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wifi__Group__3__Impl
	rule__Wifi__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Wifi__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWifiAccess().getSsidKeyword_3()); }
	'ssid'
	{ after(grammarAccess.getWifiAccess().getSsidKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wifi__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wifi__Group__4__Impl
	rule__Wifi__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Wifi__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWifiAccess().getIsKeyword_4()); }
	'is'
	{ after(grammarAccess.getWifiAccess().getIsKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wifi__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wifi__Group__5__Impl
	rule__Wifi__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Wifi__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWifiAccess().getSsidAssignment_5()); }
	(rule__Wifi__SsidAssignment_5)
	{ after(grammarAccess.getWifiAccess().getSsidAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wifi__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wifi__Group__6__Impl
	rule__Wifi__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Wifi__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWifiAccess().getCommaKeyword_6()); }
	','
	{ after(grammarAccess.getWifiAccess().getCommaKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wifi__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wifi__Group__7__Impl
	rule__Wifi__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Wifi__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWifiAccess().getPasswordKeyword_7()); }
	'password'
	{ after(grammarAccess.getWifiAccess().getPasswordKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wifi__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wifi__Group__8__Impl
	rule__Wifi__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Wifi__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWifiAccess().getIsKeyword_8()); }
	'is'
	{ after(grammarAccess.getWifiAccess().getIsKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wifi__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wifi__Group__9__Impl
	rule__Wifi__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Wifi__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWifiAccess().getPasswordAssignment_9()); }
	(rule__Wifi__PasswordAssignment_9)
	{ after(grammarAccess.getWifiAccess().getPasswordAssignment_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wifi__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Wifi__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Wifi__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWifiAccess().getRightParenthesisKeyword_10()); }
	')'
	{ after(grammarAccess.getWifiAccess().getRightParenthesisKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Config__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group__0__Impl
	rule__Config__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getConfigKeyword_0()); }
	'config'
	{ after(grammarAccess.getConfigAccess().getConfigKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group__1__Impl
	rule__Config__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConfigAccess().getNameAssignment_1()); }
	(rule__Config__NameAssignment_1)
	{ after(grammarAccess.getConfigAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Config__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getConfigAccess().getSensorsAssignment_2()); }
		(rule__Config__SensorsAssignment_2)
		{ after(grammarAccess.getConfigAccess().getSensorsAssignment_2()); }
	)
	(
		{ before(grammarAccess.getConfigAccess().getSensorsAssignment_2()); }
		(rule__Config__SensorsAssignment_2)*
		{ after(grammarAccess.getConfigAccess().getSensorsAssignment_2()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Board__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group__0__Impl
	rule__Board__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getBoardKeyword_0()); }
	'board'
	{ after(grammarAccess.getBoardAccess().getBoardKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group__1__Impl
	rule__Board__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getGroup_1()); }
	(rule__Board__Group_1__0)?
	{ after(grammarAccess.getBoardAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group__2__Impl
	rule__Board__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getSensorConfigsAssignment_2()); }
	(rule__Board__SensorConfigsAssignment_2)*
	{ after(grammarAccess.getBoardAccess().getSensorConfigsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group__3__Impl
	rule__Board__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getUseKeyword_3()); }
	'use'
	{ after(grammarAccess.getBoardAccess().getUseKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group__4__Impl
	rule__Board__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getConfigKeyword_4()); }
	'config'
	{ after(grammarAccess.getBoardAccess().getConfigKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getConfigNameAssignment_5()); }
	(rule__Board__ConfigNameAssignment_5)
	{ after(grammarAccess.getBoardAccess().getConfigNameAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Board__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group_1__0__Impl
	rule__Board__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getLeftParenthesisKeyword_1_0()); }
	'('
	{ after(grammarAccess.getBoardAccess().getLeftParenthesisKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group_1__1__Impl
	rule__Board__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getIdKeyword_1_1()); }
	'id'
	{ after(grammarAccess.getBoardAccess().getIdKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group_1__2__Impl
	rule__Board__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getIsKeyword_1_2()); }
	'is'
	{ after(grammarAccess.getBoardAccess().getIsKeyword_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group_1__3__Impl
	rule__Board__Group_1__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getNameAssignment_1_3()); }
	(rule__Board__NameAssignment_1_3)
	{ after(grammarAccess.getBoardAccess().getNameAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group_1__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Board__Group_1__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__Group_1__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBoardAccess().getRightParenthesisKeyword_1_4()); }
	')'
	{ after(grammarAccess.getBoardAccess().getRightParenthesisKeyword_1_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SensorConfig__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorConfig__Group__0__Impl
	rule__SensorConfig__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorConfigAccess().getSensorKeyword_0()); }
	'sensor'
	{ after(grammarAccess.getSensorConfigAccess().getSensorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorConfig__Group__1__Impl
	rule__SensorConfig__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorConfigAccess().getNameAssignment_1()); }
	(rule__SensorConfig__NameAssignment_1)
	{ after(grammarAccess.getSensorConfigAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorConfig__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorConfigAccess().getGroup_2()); }
	(rule__SensorConfig__Group_2__0)?
	{ after(grammarAccess.getSensorConfigAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SensorConfig__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorConfig__Group_2__0__Impl
	rule__SensorConfig__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorConfigAccess().getExternalKeyword_2_0()); }
	'external'
	{ after(grammarAccess.getSensorConfigAccess().getExternalKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorConfig__Group_2__1__Impl
	rule__SensorConfig__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorConfigAccess().getLeftParenthesisKeyword_2_1()); }
	'('
	{ after(grammarAccess.getSensorConfigAccess().getLeftParenthesisKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorConfig__Group_2__2__Impl
	rule__SensorConfig__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorConfigAccess().getPinKeyword_2_2()); }
	'pin'
	{ after(grammarAccess.getSensorConfigAccess().getPinKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorConfig__Group_2__3__Impl
	rule__SensorConfig__Group_2__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorConfigAccess().getInKeyword_2_3()); }
	'in'
	{ after(grammarAccess.getSensorConfigAccess().getInKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group_2__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorConfig__Group_2__4__Impl
	rule__SensorConfig__Group_2__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group_2__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorConfigAccess().getIsKeyword_2_4()); }
	'is'
	{ after(grammarAccess.getSensorConfigAccess().getIsKeyword_2_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group_2__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorConfig__Group_2__5__Impl
	rule__SensorConfig__Group_2__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group_2__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorConfigAccess().getPinInAssignment_2_5()); }
	(rule__SensorConfig__PinInAssignment_2_5)
	{ after(grammarAccess.getSensorConfigAccess().getPinInAssignment_2_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group_2__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorConfig__Group_2__6__Impl
	rule__SensorConfig__Group_2__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group_2__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorConfigAccess().getCommaKeyword_2_6()); }
	','
	{ after(grammarAccess.getSensorConfigAccess().getCommaKeyword_2_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group_2__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorConfig__Group_2__7__Impl
	rule__SensorConfig__Group_2__8
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group_2__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorConfigAccess().getPinKeyword_2_7()); }
	'pin'
	{ after(grammarAccess.getSensorConfigAccess().getPinKeyword_2_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group_2__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorConfig__Group_2__8__Impl
	rule__SensorConfig__Group_2__9
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group_2__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorConfigAccess().getOutKeyword_2_8()); }
	'out'
	{ after(grammarAccess.getSensorConfigAccess().getOutKeyword_2_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group_2__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorConfig__Group_2__9__Impl
	rule__SensorConfig__Group_2__10
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group_2__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorConfigAccess().getIsKeyword_2_9()); }
	'is'
	{ after(grammarAccess.getSensorConfigAccess().getIsKeyword_2_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group_2__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorConfig__Group_2__10__Impl
	rule__SensorConfig__Group_2__11
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group_2__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorConfigAccess().getPinOutAssignment_2_10()); }
	(rule__SensorConfig__PinOutAssignment_2_10)
	{ after(grammarAccess.getSensorConfigAccess().getPinOutAssignment_2_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group_2__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SensorConfig__Group_2__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__Group_2__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorConfigAccess().getRightParenthesisKeyword_2_11()); }
	')'
	{ after(grammarAccess.getSensorConfigAccess().getRightParenthesisKeyword_2_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sensor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__0__Impl
	rule__Sensor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getSensorKeyword_0()); }
	'sensor'
	{ after(grammarAccess.getSensorAccess().getSensorKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__1__Impl
	rule__Sensor__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getNameAssignment_1()); }
	(rule__Sensor__NameAssignment_1)
	{ after(grammarAccess.getSensorAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__2__Impl
	rule__Sensor__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getTypeAssignment_2()); }
	(rule__Sensor__TypeAssignment_2)?
	{ after(grammarAccess.getSensorAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__3__Impl
	rule__Sensor__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getOutputAssignment_3()); }
	(rule__Sensor__OutputAssignment_3)
	{ after(grammarAccess.getSensorAccess().getOutputAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__4__Impl
	rule__Sensor__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSensorAccess().getFunctionsAssignment_4()); }
		(rule__Sensor__FunctionsAssignment_4)
		{ after(grammarAccess.getSensorAccess().getFunctionsAssignment_4()); }
	)
	(
		{ before(grammarAccess.getSensorAccess().getFunctionsAssignment_4()); }
		(rule__Sensor__FunctionsAssignment_4)*
		{ after(grammarAccess.getSensorAccess().getFunctionsAssignment_4()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sensor__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSensorAccess().getSendAssignment_5()); }
	(rule__Sensor__SendAssignment_5)
	{ after(grammarAccess.getSensorAccess().getSendAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__0__Impl
	rule__Output__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getOutputKeyword_0()); }
	'output'
	{ after(grammarAccess.getOutputAccess().getOutputKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__1__Impl
	rule__Output__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getReadingNamesAssignment_1()); }
	(rule__Output__ReadingNamesAssignment_1)
	{ after(grammarAccess.getOutputAccess().getReadingNamesAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getGroup_2()); }
	(rule__Output__Group_2__0)*
	{ after(grammarAccess.getOutputAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Output__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_2__0__Impl
	rule__Output__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getCommaKeyword_2_0()); }
	','
	{ after(grammarAccess.getOutputAccess().getCommaKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Output__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getOutputAccess().getReadingNamesAssignment_2_1()); }
	(rule__Output__ReadingNamesAssignment_2_1)
	{ after(grammarAccess.getOutputAccess().getReadingNamesAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Sample__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sample__Group__0__Impl
	rule__Sample__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Sample__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleAccess().getSampleKeyword_0()); }
	'sample'
	{ after(grammarAccess.getSampleAccess().getSampleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sample__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Sample__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Sample__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSampleAccess().getSampleActionsAssignment_1()); }
		(rule__Sample__SampleActionsAssignment_1)
		{ after(grammarAccess.getSampleAccess().getSampleActionsAssignment_1()); }
	)
	(
		{ before(grammarAccess.getSampleAccess().getSampleActionsAssignment_1()); }
		(rule__Sample__SampleActionsAssignment_1)*
		{ after(grammarAccess.getSampleAccess().getSampleActionsAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SampleAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SampleAction__Group__0__Impl
	rule__SampleAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleActionAccess().getReadingNameAssignment_0()); }
	(rule__SampleAction__ReadingNameAssignment_0)
	{ after(grammarAccess.getSampleActionAccess().getReadingNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SampleAction__Group__1__Impl
	rule__SampleAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleActionAccess().getGroup_1()); }
	(rule__SampleAction__Group_1__0)?
	{ after(grammarAccess.getSampleActionAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleAction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SampleAction__Group__2__Impl
	rule__SampleAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleAction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleActionAccess().getEveryKeyword_2()); }
	'every'
	{ after(grammarAccess.getSampleActionAccess().getEveryKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleAction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SampleAction__Group__3__Impl
	rule__SampleAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleAction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleActionAccess().getAmountOfTimeAssignment_3()); }
	(rule__SampleAction__AmountOfTimeAssignment_3)
	{ after(grammarAccess.getSampleActionAccess().getAmountOfTimeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleAction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SampleAction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleAction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleActionAccess().getTimeUnitAssignment_4()); }
	(rule__SampleAction__TimeUnitAssignment_4)
	{ after(grammarAccess.getSampleActionAccess().getTimeUnitAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SampleAction__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SampleAction__Group_1__0__Impl
	rule__SampleAction__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleAction__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleActionAccess().getWhenKeyword_1_0()); }
	'when'
	{ after(grammarAccess.getSampleActionAccess().getWhenKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleAction__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SampleAction__Group_1__1__Impl
	rule__SampleAction__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleAction__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleActionAccess().getReadingNameToCompareAssignment_1_1()); }
	(rule__SampleAction__ReadingNameToCompareAssignment_1_1)
	{ after(grammarAccess.getSampleActionAccess().getReadingNameToCompareAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleAction__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SampleAction__Group_1__2__Impl
	rule__SampleAction__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleAction__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleActionAccess().getRelationalOperatorAssignment_1_2()); }
	(rule__SampleAction__RelationalOperatorAssignment_1_2)
	{ after(grammarAccess.getSampleActionAccess().getRelationalOperatorAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleAction__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SampleAction__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleAction__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSampleActionAccess().getNumberAssignment_1_3()); }
	(rule__SampleAction__NumberAssignment_1_3)
	{ after(grammarAccess.getSampleActionAccess().getNumberAssignment_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Filter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filter__Group__0__Impl
	rule__Filter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterAccess().getFilterKeyword_0()); }
	'filter'
	{ after(grammarAccess.getFilterAccess().getFilterKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Filter__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getFilterAccess().getFilterActionsAssignment_1()); }
		(rule__Filter__FilterActionsAssignment_1)
		{ after(grammarAccess.getFilterAccess().getFilterActionsAssignment_1()); }
	)
	(
		{ before(grammarAccess.getFilterAccess().getFilterActionsAssignment_1()); }
		(rule__Filter__FilterActionsAssignment_1)*
		{ after(grammarAccess.getFilterAccess().getFilterActionsAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FilterAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterAction__Group__0__Impl
	rule__FilterAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterActionAccess().getReadingNameAssignment_0()); }
	(rule__FilterAction__ReadingNameAssignment_0)
	{ after(grammarAccess.getFilterActionAccess().getReadingNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterAction__Group__1__Impl
	rule__FilterAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterActionAccess().getUseKeyword_1()); }
	'use'
	{ after(grammarAccess.getFilterActionAccess().getUseKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterAction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterAction__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterAction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterActionAccess().getAlternatives_2()); }
	(rule__FilterAction__Alternatives_2)
	{ after(grammarAccess.getFilterActionAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FilterAction__Group_2_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterAction__Group_2_0__0__Impl
	rule__FilterAction__Group_2_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterAction__Group_2_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterActionAccess().getFilterTypeAssignment_2_0_0()); }
	(rule__FilterAction__FilterTypeAssignment_2_0_0)
	{ after(grammarAccess.getFilterActionAccess().getFilterTypeAssignment_2_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterAction__Group_2_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterAction__Group_2_0__1__Impl
	rule__FilterAction__Group_2_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterAction__Group_2_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterActionAccess().getWithKeyword_2_0_1()); }
	'with'
	{ after(grammarAccess.getFilterActionAccess().getWithKeyword_2_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterAction__Group_2_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterAction__Group_2_0__2__Impl
	rule__FilterAction__Group_2_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterAction__Group_2_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterActionAccess().getNumberAssignment_2_0_2()); }
	(rule__FilterAction__NumberAssignment_2_0_2)
	{ after(grammarAccess.getFilterActionAccess().getNumberAssignment_2_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterAction__Group_2_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterAction__Group_2_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterAction__Group_2_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterActionAccess().getValuesKeyword_2_0_3()); }
	'values'
	{ after(grammarAccess.getFilterActionAccess().getValuesKeyword_2_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FilterExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterExp__Group__0__Impl
	rule__FilterExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterExpAccess().getReadingNameAssignment_0()); }
	(rule__FilterExp__ReadingNameAssignment_0)
	{ after(grammarAccess.getFilterExpAccess().getReadingNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterExp__Group__1__Impl
	rule__FilterExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterExpAccess().getRelationalOperatorAssignment_1()); }
	(rule__FilterExp__RelationalOperatorAssignment_1)
	{ after(grammarAccess.getFilterExpAccess().getRelationalOperatorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterExp__Group__2__Impl
	rule__FilterExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterExpAccess().getNumberAssignment_2()); }
	(rule__FilterExp__NumberAssignment_2)
	{ after(grammarAccess.getFilterExpAccess().getNumberAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterExp__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterExpAccess().getGroup_3()); }
	(rule__FilterExp__Group_3__0)?
	{ after(grammarAccess.getFilterExpAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FilterExp__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterExp__Group_3__0__Impl
	rule__FilterExp__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterExp__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterExpAccess().getBitwiseOperatorAssignment_3_0()); }
	(rule__FilterExp__BitwiseOperatorAssignment_3_0)
	{ after(grammarAccess.getFilterExpAccess().getBitwiseOperatorAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterExp__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FilterExp__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterExp__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFilterExpAccess().getFilterExpAssignment_3_1()); }
	(rule__FilterExp__FilterExpAssignment_3_1)
	{ after(grammarAccess.getFilterExpAccess().getFilterExpAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Process__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__0__Impl
	rule__Process__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessAccess().getProcessKeyword_0()); }
	'process'
	{ after(grammarAccess.getProcessAccess().getProcessKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Process__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getProcessAccess().getProcessActionsAssignment_1()); }
		(rule__Process__ProcessActionsAssignment_1)
		{ after(grammarAccess.getProcessAccess().getProcessActionsAssignment_1()); }
	)
	(
		{ before(grammarAccess.getProcessAccess().getProcessActionsAssignment_1()); }
		(rule__Process__ProcessActionsAssignment_1)*
		{ after(grammarAccess.getProcessAccess().getProcessActionsAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ProcessAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessAction__Group__0__Impl
	rule__ProcessAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessActionAccess().getReadingNameAssignment_0()); }
	(rule__ProcessAction__ReadingNameAssignment_0)
	{ after(grammarAccess.getProcessActionAccess().getReadingNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessAction__Group__1__Impl
	rule__ProcessAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessActionAccess().getIsKeyword_1()); }
	'is'
	{ after(grammarAccess.getProcessActionAccess().getIsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessAction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ProcessAction__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessAction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProcessActionAccess().getExpAssignment_2()); }
	(rule__ProcessAction__ExpAssignment_2)
	{ after(grammarAccess.getProcessActionAccess().getExpAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group__0__Impl
	rule__Exp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getFactorParserRuleCall_0()); }
	ruleFactor
	{ after(grammarAccess.getExpAccess().getFactorParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getGroup_1()); }
	(rule__Exp__Group_1__0)*
	{ after(grammarAccess.getExpAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1__0__Impl
	rule__Exp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getAlternatives_1_0()); }
	(rule__Exp__Alternatives_1_0)
	{ after(grammarAccess.getExpAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getRightAssignment_1_1()); }
	(rule__Exp__RightAssignment_1_1)
	{ after(grammarAccess.getExpAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1_0_0__0__Impl
	rule__Exp__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getPlusSignKeyword_1_0_0_0()); }
	'+'
	{ after(grammarAccess.getExpAccess().getPlusSignKeyword_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getPlusLeftAction_1_0_0_1()); }
	()
	{ after(grammarAccess.getExpAccess().getPlusLeftAction_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Exp__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1_0_1__0__Impl
	rule__Exp__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getHyphenMinusKeyword_1_0_1_0()); }
	'-'
	{ after(grammarAccess.getExpAccess().getHyphenMinusKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Exp__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getExpAccess().getMinusLeftAction_1_0_1_1()); }
	()
	{ after(grammarAccess.getExpAccess().getMinusLeftAction_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group__0__Impl
	rule__Factor__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getPrimaryParserRuleCall_0()); }
	rulePrimary
	{ after(grammarAccess.getFactorAccess().getPrimaryParserRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getGroup_1()); }
	(rule__Factor__Group_1__0)*
	{ after(grammarAccess.getFactorAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__0__Impl
	rule__Factor__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getAlternatives_1_0()); }
	(rule__Factor__Alternatives_1_0)
	{ after(grammarAccess.getFactorAccess().getAlternatives_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getRightAssignment_1_1()); }
	(rule__Factor__RightAssignment_1_1)
	{ after(grammarAccess.getFactorAccess().getRightAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1_0_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1_0_0__0__Impl
	rule__Factor__Group_1_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getAsteriskKeyword_1_0_0_0()); }
	'*'
	{ after(grammarAccess.getFactorAccess().getAsteriskKeyword_1_0_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getMultLeftAction_1_0_0_1()); }
	()
	{ after(grammarAccess.getFactorAccess().getMultLeftAction_1_0_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Factor__Group_1_0_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1_0_1__0__Impl
	rule__Factor__Group_1_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getSolidusKeyword_1_0_1_0()); }
	'/'
	{ after(grammarAccess.getFactorAccess().getSolidusKeyword_1_0_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Factor__Group_1_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__Group_1_0_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFactorAccess().getDivLeftAction_1_0_1_1()); }
	()
	{ after(grammarAccess.getFactorAccess().getDivLeftAction_1_0_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Number__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__0__Impl
	rule__Number__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getNumAction_0()); }
	()
	{ after(grammarAccess.getNumberAccess().getNumAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Number__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumberAccess().getValueAssignment_1()); }
	(rule__Number__ValueAssignment_1)
	{ after(grammarAccess.getNumberAccess().getValueAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parenthesis__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parenthesis__Group__0__Impl
	rule__Parenthesis__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisAccess().getLeftParenthesisKeyword_0()); }
	'('
	{ after(grammarAccess.getParenthesisAccess().getLeftParenthesisKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parenthesis__Group__1__Impl
	rule__Parenthesis__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisAccess().getExpParserRuleCall_1()); }
	ruleExp
	{ after(grammarAccess.getParenthesisAccess().getExpParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parenthesis__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parenthesis__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParenthesisAccess().getRightParenthesisKeyword_2()); }
	')'
	{ after(grammarAccess.getParenthesisAccess().getRightParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVarAction_0()); }
	()
	{ after(grammarAccess.getVariableAccess().getVarAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getReadingNameAssignment_1()); }
	(rule__Variable__ReadingNameAssignment_1)
	{ after(grammarAccess.getVariableAccess().getReadingNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Send__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Send__Group__0__Impl
	rule__Send__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Send__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendAccess().getSendKeyword_0()); }
	'send'
	{ after(grammarAccess.getSendAccess().getSendKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Send__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Send__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Send__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getSendAccess().getSendActionsAssignment_1()); }
		(rule__Send__SendActionsAssignment_1)
		{ after(grammarAccess.getSendAccess().getSendActionsAssignment_1()); }
	)
	(
		{ before(grammarAccess.getSendAccess().getSendActionsAssignment_1()); }
		(rule__Send__SendActionsAssignment_1)*
		{ after(grammarAccess.getSendAccess().getSendActionsAssignment_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SendAction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendAction__Group__0__Impl
	rule__SendAction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SendAction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendActionAccess().getReadingNameAssignment_0()); }
	(rule__SendAction__ReadingNameAssignment_0)
	{ after(grammarAccess.getSendActionAccess().getReadingNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendAction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendAction__Group__1__Impl
	rule__SendAction__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SendAction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendActionAccess().getWhenKeyword_1()); }
	'when'
	{ after(grammarAccess.getSendActionAccess().getWhenKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendAction__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendAction__Group__2__Impl
	rule__SendAction__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SendAction__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendActionAccess().getSamplesKeyword_2()); }
	'samples'
	{ after(grammarAccess.getSendActionAccess().getSamplesKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendAction__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendAction__Group__3__Impl
	rule__SendAction__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SendAction__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendActionAccess().getRelationalOperatorAssignment_3()); }
	(rule__SendAction__RelationalOperatorAssignment_3)
	{ after(grammarAccess.getSendActionAccess().getRelationalOperatorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendAction__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SendAction__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SendAction__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSendActionAccess().getNumberAssignment_4()); }
	(rule__SendAction__NumberAssignment_4)
	{ after(grammarAccess.getSendActionAccess().getNumberAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__WebserverAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getWebserverWebserverParserRuleCall_0_0()); }
		ruleWebserver
		{ after(grammarAccess.getProgramAccess().getWebserverWebserverParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__WifisAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getWifisWifiParserRuleCall_1_0()); }
		ruleWifi
		{ after(grammarAccess.getProgramAccess().getWifisWifiParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ConfigsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getConfigsConfigParserRuleCall_2_0()); }
		ruleConfig
		{ after(grammarAccess.getProgramAccess().getConfigsConfigParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__BoardsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getBoardsBoardParserRuleCall_3_0()); }
		ruleBoard
		{ after(grammarAccess.getProgramAccess().getBoardsBoardParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Webserver__UrlAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWebserverAccess().getUrlSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getWebserverAccess().getUrlSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Webserver__PortAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWebserverAccess().getPortINTTerminalRuleCall_9_0()); }
		RULE_INT
		{ after(grammarAccess.getWebserverAccess().getPortINTTerminalRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wifi__SsidAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWifiAccess().getSsidSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getWifiAccess().getSsidSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Wifi__PasswordAssignment_9
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWifiAccess().getPasswordSTRINGTerminalRuleCall_9_0()); }
		RULE_STRING
		{ after(grammarAccess.getWifiAccess().getPasswordSTRINGTerminalRuleCall_9_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getConfigAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Config__SensorsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConfigAccess().getSensorsSensorParserRuleCall_2_0()); }
		ruleSensor
		{ after(grammarAccess.getConfigAccess().getSensorsSensorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__NameAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoardAccess().getNameSTRINGTerminalRuleCall_1_3_0()); }
		RULE_STRING
		{ after(grammarAccess.getBoardAccess().getNameSTRINGTerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__SensorConfigsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoardAccess().getSensorConfigsSensorConfigParserRuleCall_2_0()); }
		ruleSensorConfig
		{ after(grammarAccess.getBoardAccess().getSensorConfigsSensorConfigParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Board__ConfigNameAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBoardAccess().getConfigNameConfigCrossReference_5_0()); }
		(
			{ before(grammarAccess.getBoardAccess().getConfigNameConfigIDTerminalRuleCall_5_0_1()); }
			RULE_ID
			{ after(grammarAccess.getBoardAccess().getConfigNameConfigIDTerminalRuleCall_5_0_1()); }
		)
		{ after(grammarAccess.getBoardAccess().getConfigNameConfigCrossReference_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorConfigAccess().getNameSensorNameParserRuleCall_1_0()); }
		ruleSensorName
		{ after(grammarAccess.getSensorConfigAccess().getNameSensorNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__PinInAssignment_2_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorConfigAccess().getPinInSTRINGTerminalRuleCall_2_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getSensorConfigAccess().getPinInSTRINGTerminalRuleCall_2_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SensorConfig__PinOutAssignment_2_10
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorConfigAccess().getPinOutSTRINGTerminalRuleCall_2_10_0()); }
		RULE_STRING
		{ after(grammarAccess.getSensorConfigAccess().getPinOutSTRINGTerminalRuleCall_2_10_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getNameSensorNameParserRuleCall_1_0()); }
		ruleSensorName
		{ after(grammarAccess.getSensorAccess().getNameSensorNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getTypeExternalKeyword_2_0()); }
		(
			{ before(grammarAccess.getSensorAccess().getTypeExternalKeyword_2_0()); }
			'external'
			{ after(grammarAccess.getSensorAccess().getTypeExternalKeyword_2_0()); }
		)
		{ after(grammarAccess.getSensorAccess().getTypeExternalKeyword_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__OutputAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getOutputOutputParserRuleCall_3_0()); }
		ruleOutput
		{ after(grammarAccess.getSensorAccess().getOutputOutputParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__FunctionsAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getFunctionsFunctionParserRuleCall_4_0()); }
		ruleFunction
		{ after(grammarAccess.getSensorAccess().getFunctionsFunctionParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sensor__SendAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSensorAccess().getSendSendParserRuleCall_5_0()); }
		ruleSend
		{ after(grammarAccess.getSensorAccess().getSendSendParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__ReadingNamesAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getReadingNamesReadingNameParserRuleCall_1_0()); }
		ruleReadingName
		{ after(grammarAccess.getOutputAccess().getReadingNamesReadingNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Output__ReadingNamesAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOutputAccess().getReadingNamesReadingNameParserRuleCall_2_1_0()); }
		ruleReadingName
		{ after(grammarAccess.getOutputAccess().getReadingNamesReadingNameParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Sample__SampleActionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSampleAccess().getSampleActionsSampleActionParserRuleCall_1_0()); }
		ruleSampleAction
		{ after(grammarAccess.getSampleAccess().getSampleActionsSampleActionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleAction__ReadingNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSampleActionAccess().getReadingNameReadingNameCrossReference_0_0()); }
		(
			{ before(grammarAccess.getSampleActionAccess().getReadingNameReadingNameIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSampleActionAccess().getReadingNameReadingNameIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getSampleActionAccess().getReadingNameReadingNameCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleAction__ReadingNameToCompareAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSampleActionAccess().getReadingNameToCompareReadingNameWithConfigScopeParserRuleCall_1_1_0()); }
		ruleReadingNameWithConfigScope
		{ after(grammarAccess.getSampleActionAccess().getReadingNameToCompareReadingNameWithConfigScopeParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleAction__RelationalOperatorAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSampleActionAccess().getRelationalOperatorRelationalOperatorParserRuleCall_1_2_0()); }
		ruleRelationalOperator
		{ after(grammarAccess.getSampleActionAccess().getRelationalOperatorRelationalOperatorParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleAction__NumberAssignment_1_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSampleActionAccess().getNumberINTTerminalRuleCall_1_3_0()); }
		RULE_INT
		{ after(grammarAccess.getSampleActionAccess().getNumberINTTerminalRuleCall_1_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleAction__AmountOfTimeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSampleActionAccess().getAmountOfTimeINTTerminalRuleCall_3_0()); }
		RULE_INT
		{ after(grammarAccess.getSampleActionAccess().getAmountOfTimeINTTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SampleAction__TimeUnitAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSampleActionAccess().getTimeUnitTimeUnitParserRuleCall_4_0()); }
		ruleTimeUnit
		{ after(grammarAccess.getSampleActionAccess().getTimeUnitTimeUnitParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Filter__FilterActionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterAccess().getFilterActionsFilterActionParserRuleCall_1_0()); }
		ruleFilterAction
		{ after(grammarAccess.getFilterAccess().getFilterActionsFilterActionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterAction__ReadingNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterActionAccess().getReadingNameReadingNameCrossReference_0_0()); }
		(
			{ before(grammarAccess.getFilterActionAccess().getReadingNameReadingNameIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFilterActionAccess().getReadingNameReadingNameIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getFilterActionAccess().getReadingNameReadingNameCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterAction__FilterTypeAssignment_2_0_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterActionAccess().getFilterTypeFilterTypeParserRuleCall_2_0_0_0()); }
		ruleFilterType
		{ after(grammarAccess.getFilterActionAccess().getFilterTypeFilterTypeParserRuleCall_2_0_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterAction__NumberAssignment_2_0_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterActionAccess().getNumberINTTerminalRuleCall_2_0_2_0()); }
		RULE_INT
		{ after(grammarAccess.getFilterActionAccess().getNumberINTTerminalRuleCall_2_0_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterAction__FilterExpAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterActionAccess().getFilterExpFilterExpParserRuleCall_2_1_0()); }
		ruleFilterExp
		{ after(grammarAccess.getFilterActionAccess().getFilterExpFilterExpParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterExp__ReadingNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterExpAccess().getReadingNameReadingNameWithConfigScopeParserRuleCall_0_0()); }
		ruleReadingNameWithConfigScope
		{ after(grammarAccess.getFilterExpAccess().getReadingNameReadingNameWithConfigScopeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterExp__RelationalOperatorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterExpAccess().getRelationalOperatorRelationalOperatorParserRuleCall_1_0()); }
		ruleRelationalOperator
		{ after(grammarAccess.getFilterExpAccess().getRelationalOperatorRelationalOperatorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterExp__NumberAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterExpAccess().getNumberINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getFilterExpAccess().getNumberINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterExp__BitwiseOperatorAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterExpAccess().getBitwiseOperatorBitwiseOperatorParserRuleCall_3_0_0()); }
		ruleBitwiseOperator
		{ after(grammarAccess.getFilterExpAccess().getBitwiseOperatorBitwiseOperatorParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterExp__FilterExpAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterExpAccess().getFilterExpFilterExpParserRuleCall_3_1_0()); }
		ruleFilterExp
		{ after(grammarAccess.getFilterExpAccess().getFilterExpFilterExpParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Process__ProcessActionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessAccess().getProcessActionsProcessActionParserRuleCall_1_0()); }
		ruleProcessAction
		{ after(grammarAccess.getProcessAccess().getProcessActionsProcessActionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessAction__ReadingNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessActionAccess().getReadingNameReadingNameCrossReference_0_0()); }
		(
			{ before(grammarAccess.getProcessActionAccess().getReadingNameReadingNameIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getProcessActionAccess().getReadingNameReadingNameIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getProcessActionAccess().getReadingNameReadingNameCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ProcessAction__ExpAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProcessActionAccess().getExpExpParserRuleCall_2_0()); }
		ruleExp
		{ after(grammarAccess.getProcessActionAccess().getExpExpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpAccess().getRightFactorParserRuleCall_1_1_0()); }
		ruleFactor
		{ after(grammarAccess.getExpAccess().getRightFactorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Factor__RightAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFactorAccess().getRightPrimaryParserRuleCall_1_1_0()); }
		rulePrimary
		{ after(grammarAccess.getFactorAccess().getRightPrimaryParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Number__ValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumberAccess().getValueINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getNumberAccess().getValueINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__ReadingNameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getReadingNameReadingNameWithConfigScopeParserRuleCall_1_0()); }
		ruleReadingNameWithConfigScope
		{ after(grammarAccess.getVariableAccess().getReadingNameReadingNameWithConfigScopeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Send__SendActionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSendAccess().getSendActionsSendActionParserRuleCall_1_0()); }
		ruleSendAction
		{ after(grammarAccess.getSendAccess().getSendActionsSendActionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendAction__ReadingNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSendActionAccess().getReadingNameReadingNameCrossReference_0_0()); }
		(
			{ before(grammarAccess.getSendActionAccess().getReadingNameReadingNameIDTerminalRuleCall_0_0_1()); }
			RULE_ID
			{ after(grammarAccess.getSendActionAccess().getReadingNameReadingNameIDTerminalRuleCall_0_0_1()); }
		)
		{ after(grammarAccess.getSendActionAccess().getReadingNameReadingNameCrossReference_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendAction__RelationalOperatorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSendActionAccess().getRelationalOperatorRelationalOperatorParserRuleCall_3_0()); }
		ruleRelationalOperator
		{ after(grammarAccess.getSendActionAccess().getRelationalOperatorRelationalOperatorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SendAction__NumberAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSendActionAccess().getNumberINTTerminalRuleCall_4_0()); }
		RULE_INT
		{ after(grammarAccess.getSendActionAccess().getNumberINTTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadingName__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReadingNameAccess().getNameIDTerminalRuleCall_0()); }
		RULE_ID
		{ after(grammarAccess.getReadingNameAccess().getNameIDTerminalRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadingNameWithConfigScope__NameAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReadingNameWithConfigScopeAccess().getNameReadingNameCrossReference_0()); }
		(
			{ before(grammarAccess.getReadingNameWithConfigScopeAccess().getNameReadingNameIDTerminalRuleCall_0_1()); }
			RULE_ID
			{ after(grammarAccess.getReadingNameWithConfigScopeAccess().getNameReadingNameIDTerminalRuleCall_0_1()); }
		)
		{ after(grammarAccess.getReadingNameWithConfigScopeAccess().getNameReadingNameCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BitwiseOperator__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBitwiseOperatorAccess().getValueAlternatives_0()); }
		(rule__BitwiseOperator__ValueAlternatives_0)
		{ after(grammarAccess.getBitwiseOperatorAccess().getValueAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelationalOperator__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelationalOperatorAccess().getValueAlternatives_0()); }
		(rule__RelationalOperator__ValueAlternatives_0)
		{ after(grammarAccess.getRelationalOperatorAccess().getValueAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TimeUnit__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTimeUnitAccess().getValueAlternatives_0()); }
		(rule__TimeUnit__ValueAlternatives_0)
		{ after(grammarAccess.getTimeUnitAccess().getValueAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FilterType__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFilterTypeAccess().getValueAlternatives_0()); }
		(rule__FilterType__ValueAlternatives_0)
		{ after(grammarAccess.getFilterTypeAccess().getValueAlternatives_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
